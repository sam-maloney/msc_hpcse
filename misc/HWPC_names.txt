Available native events and hardware information.
--------------------------------------------------------------------------------
PAPI Version             : 5.5.0.1
Vendor string and code   : GenuineIntel (1)
Model string and code    : Intel(R) Xeon(R) CPU E5-2690 v3 @ 2.60GHz (63)
CPU Revision             : 2.000000
CPUID Info               : Family: 6  Model: 63  Stepping: 2
CPU Max Megahertz        : 2601
CPU Min Megahertz        : 1200
Hdw Threads per core     : 2
Cores per Socket         : 12
Sockets                  : 1
NUMA Nodes               : 1
CPUs per Node            : 24
Total CPUs               : 24
Running in a VM          : no
Number Hardware Counters : 11
Max Multiplex Counters   : 192
--------------------------------------------------------------------------------

===============================================================================
 Native Events in Component: perf_event
===============================================================================
| ix86arch::UNHALTED_CORE_CYCLES                                               |
|            count core clock cycles whenever the clock signal on the specific |
|            core is running (not halted)                                      |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ix86arch::INSTRUCTION_RETIRED                                                |
|            count the number of instructions at retirement. For instructions t|
|            hat consists of multiple micro-ops, this event counts the retireme|
|            nt of the last micro-op of the instruction                        |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ix86arch::UNHALTED_REFERENCE_CYCLES                                          |
|            count reference clock cycles while the clock signal on the specifi|
|            c core is running. The reference clock operates at a fixed frequen|
|            cy, irrespective of core frequency changes due to performance stat|
|            e transitions                                                     |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ix86arch::LLC_REFERENCES                                                     |
|            count each request originating from the core to reference a cache |
|            line in the last level cache. The count may include speculation, b|
|            ut excludes cache line fills due to hardware prefetch             |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ix86arch::LLC_MISSES                                                         |
|            count each cache miss condition for references to the last level c|
|            ache. The event count may include speculation, but excludes cache |
|            line fills due to hardware prefetch                               |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ix86arch::BRANCH_INSTRUCTIONS_RETIRED                                        |
|            count branch instructions at retirement. Specifically, this event |
|            counts the retirement of the last micro-op of a branch instruction|
|                                                                              |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ix86arch::MISPREDICTED_BRANCH_RETIRED                                        |
|            count mispredicted branch instructions at retirement. Specifically|
|            , this event counts at retirement of the last micro-op of a branch|
|             instruction in the architectural path of the execution and experi|
|            enced misprediction in the branch prediction hardware             |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CPU_CYCLES                                               |
|            PERF_COUNT_HW_CPU_CYCLES                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CYCLES                                                                 |
|            PERF_COUNT_HW_CPU_CYCLES                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CPU-CYCLES                                                             |
|            PERF_COUNT_HW_CPU_CYCLES                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_INSTRUCTIONS                                             |
|            PERF_COUNT_HW_INSTRUCTIONS                                        |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::INSTRUCTIONS                                                           |
|            PERF_COUNT_HW_INSTRUCTIONS                                        |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_REFERENCES                                         |
|            PERF_COUNT_HW_CACHE_REFERENCES                                    |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CACHE-REFERENCES                                                       |
|            PERF_COUNT_HW_CACHE_REFERENCES                                    |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_MISSES                                             |
|            PERF_COUNT_HW_CACHE_MISSES                                        |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CACHE-MISSES                                                           |
|            PERF_COUNT_HW_CACHE_MISSES                                        |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS                                      |
|            PERF_COUNT_HW_BRANCH_INSTRUCTIONS                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::BRANCH-INSTRUCTIONS                                                    |
|            PERF_COUNT_HW_BRANCH_INSTRUCTIONS                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::BRANCHES                                                               |
|            PERF_COUNT_HW_BRANCH_INSTRUCTIONS                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_BRANCH_MISSES                                            |
|            PERF_COUNT_HW_BRANCH_MISSES                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::BRANCH-MISSES                                                          |
|            PERF_COUNT_HW_BRANCH_MISSES                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_BUS_CYCLES                                               |
|            PERF_COUNT_HW_BUS_CYCLES                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::BUS-CYCLES                                                             |
|            PERF_COUNT_HW_BUS_CYCLES                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_STALLED_CYCLES_FRONTEND                                  |
|            PERF_COUNT_HW_STALLED_CYCLES_FRONTEND                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::STALLED-CYCLES-FRONTEND                                                |
|            PERF_COUNT_HW_STALLED_CYCLES_FRONTEND                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::IDLE-CYCLES-FRONTEND                                                   |
|            PERF_COUNT_HW_STALLED_CYCLES_FRONTEND                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_STALLED_CYCLES_BACKEND                                   |
|            PERF_COUNT_HW_STALLED_CYCLES_BACKEND                              |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::STALLED-CYCLES-BACKEND                                                 |
|            PERF_COUNT_HW_STALLED_CYCLES_BACKEND                              |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::IDLE-CYCLES-BACKEND                                                    |
|            PERF_COUNT_HW_STALLED_CYCLES_BACKEND                              |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_REF_CPU_CYCLES                                           |
|            PERF_COUNT_HW_REF_CPU_CYCLES                                      |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::REF-CYCLES                                                             |
|            PERF_COUNT_HW_REF_CPU_CYCLES                                      |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_CPU_CLOCK                                                |
|            PERF_COUNT_SW_CPU_CLOCK                                           |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CPU-CLOCK                                                              |
|            PERF_COUNT_SW_CPU_CLOCK                                           |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_TASK_CLOCK                                               |
|            PERF_COUNT_SW_TASK_CLOCK                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::TASK-CLOCK                                                             |
|            PERF_COUNT_SW_TASK_CLOCK                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_PAGE_FAULTS                                              |
|            PERF_COUNT_SW_PAGE_FAULTS                                         |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PAGE-FAULTS                                                            |
|            PERF_COUNT_SW_PAGE_FAULTS                                         |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::FAULTS                                                                 |
|            PERF_COUNT_SW_PAGE_FAULTS                                         |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_CONTEXT_SWITCHES                                         |
|            PERF_COUNT_SW_CONTEXT_SWITCHES                                    |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CONTEXT-SWITCHES                                                       |
|            PERF_COUNT_SW_CONTEXT_SWITCHES                                    |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CS                                                                     |
|            PERF_COUNT_SW_CONTEXT_SWITCHES                                    |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_CPU_MIGRATIONS                                           |
|            PERF_COUNT_SW_CPU_MIGRATIONS                                      |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::CPU-MIGRATIONS                                                         |
|            PERF_COUNT_SW_CPU_MIGRATIONS                                      |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::MIGRATIONS                                                             |
|            PERF_COUNT_SW_CPU_MIGRATIONS                                      |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_PAGE_FAULTS_MIN                                          |
|            PERF_COUNT_SW_PAGE_FAULTS_MIN                                     |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::MINOR-FAULTS                                                           |
|            PERF_COUNT_SW_PAGE_FAULTS_MIN                                     |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ                                          |
|            PERF_COUNT_SW_PAGE_FAULTS_MAJ                                     |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::MAJOR-FAULTS                                                           |
|            PERF_COUNT_SW_PAGE_FAULTS_MAJ                                     |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_L1D                                                |
|            L1 data cache                                                     |
|     :READ                                                                    |
|            read access                                                       |
|     :WRITE                                                                   |
|            write access                                                      |
|     :PREFETCH                                                                |
|            prefetch access                                                   |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-DCACHE-LOADS                                                        |
|            L1 cache load accesses                                            |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-DCACHE-LOAD-MISSES                                                  |
|            L1 cache load misses                                              |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-DCACHE-STORES                                                       |
|            L1 cache store accesses                                           |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-DCACHE-STORE-MISSES                                                 |
|            L1 cache store misses                                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-DCACHE-PREFETCHES                                                   |
|            L1 cache prefetch accesses                                        |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-DCACHE-PREFETCH-MISSES                                              |
|            L1 cache prefetch misses                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_L1I                                                |
|            L1 instruction cache                                              |
|     :READ                                                                    |
|            read access                                                       |
|     :PREFETCH                                                                |
|            prefetch access                                                   |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-ICACHE-LOADS                                                        |
|            L1I cache load accesses                                           |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-ICACHE-LOAD-MISSES                                                  |
|            L1I cache load misses                                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-ICACHE-PREFETCHES                                                   |
|            L1I cache prefetch accesses                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::L1-ICACHE-PREFETCH-MISSES                                              |
|            L1I cache prefetch misses                                         |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_LL                                                 |
|            Last level cache                                                  |
|     :READ                                                                    |
|            read access                                                       |
|     :WRITE                                                                   |
|            write access                                                      |
|     :PREFETCH                                                                |
|            prefetch access                                                   |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::LLC-LOADS                                                              |
|            Last level cache load accesses                                    |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::LLC-LOAD-MISSES                                                        |
|            Last level cache load misses                                      |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::LLC-STORES                                                             |
|            Last level cache store accesses                                   |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::LLC-STORE-MISSES                                                       |
|            Last level cache store misses                                     |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::LLC-PREFETCHES                                                         |
|            Last level cache prefetch accesses                                |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::LLC-PREFETCH-MISSES                                                    |
|            Last level cache prefetch misses                                  |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_DTLB                                               |
|            Data Translation Lookaside Buffer                                 |
|     :READ                                                                    |
|            read access                                                       |
|     :WRITE                                                                   |
|            write access                                                      |
|     :PREFETCH                                                                |
|            prefetch access                                                   |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::DTLB-LOADS                                                             |
|            Data TLB load accesses                                            |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::DTLB-LOAD-MISSES                                                       |
|            Data TLB load misses                                              |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::DTLB-STORES                                                            |
|            Data TLB store accesses                                           |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::DTLB-STORE-MISSES                                                      |
|            Data TLB store misses                                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::DTLB-PREFETCHES                                                        |
|            Data TLB prefetch accesses                                        |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::DTLB-PREFETCH-MISSES                                                   |
|            Data TLB prefetch misses                                          |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_ITLB                                               |
|            Instruction Translation Lookaside Buffer                          |
|     :READ                                                                    |
|            read access                                                       |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::ITLB-LOADS                                                             |
|            Instruction TLB load accesses                                     |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::ITLB-LOAD-MISSES                                                       |
|            Instruction TLB load misses                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_BPU                                                |
|            Branch Prediction Unit                                            |
|     :READ                                                                    |
|            read access                                                       |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::BRANCH-LOADS                                                           |
|            Branch  load accesses                                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::BRANCH-LOAD-MISSES                                                     |
|            Branch  load misses                                               |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::PERF_COUNT_HW_CACHE_NODE                                               |
|            Node memory access                                                |
|     :READ                                                                    |
|            read access                                                       |
|     :WRITE                                                                   |
|            write access                                                      |
|     :PREFETCH                                                                |
|            prefetch access                                                   |
|     :ACCESS                                                                  |
|            hit access                                                        |
|     :MISS                                                                    |
|            miss access                                                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::NODE-LOADS                                                             |
|            Node  load accesses                                               |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::NODE-LOAD-MISSES                                                       |
|            Node  load misses                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::NODE-STORES                                                            |
|            Node  store accesses                                              |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::NODE-STORE-MISSES                                                      |
|            Node  store misses                                                |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::NODE-PREFETCHES                                                        |
|            Node  prefetch accesses                                           |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf::NODE-PREFETCH-MISSES                                                   |
|            Node  prefetch misses                                             |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| perf_raw::r0000                                                              |
|            perf_events raw event syntax: r[0-9a-fA-F]+                       |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :h=0                                                                     |
|            monitor at hypervisor level                                       |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UNHALTED_CORE_CYCLES                                                         |
|            Count core clock cycles whenever the clock signal on the specific |
|            core is running (not halted)                                      |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UNHALTED_REFERENCE_CYCLES                                                    |
|            Unhalted reference cycles                                         |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| INSTRUCTION_RETIRED                                                          |
|            Number of instructions at retirement                              |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| INSTRUCTIONS_RETIRED                                                         |
|            This is an alias for INSTRUCTION_RETIRED                          |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| BRANCH_INSTRUCTIONS_RETIRED                                                  |
|            Count branch instructions at retirement. Specifically, this event |
|            counts the retirement of the last micro-op of a branch instruction|
|                                                                              |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MISPREDICTED_BRANCH_RETIRED                                                  |
|            Count mispredicted branch instructions at retirement. Specifically|
|            , this event counts at retirement of the last micro-op of a branch|
|             instruction in the architectural path of the execution and experi|
|            enced misprediction in the branch prediction hardware             |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| BACLEARS                                                                     |
|            Branch re-steered                                                 |
|     :ANY                                                                     |
|            Counts the number of times the front end is re-steered, mainly whe|
|            n the BPU cannot provide a correct prediction and this is correcte|
|            d by other branch handling mechanisms at the front end            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| BR_INST_EXEC                                                                 |
|            Branch instructions executed                                      |
|     :NONTAKEN_CONDITIONAL                                                    |
|            All macro conditional nontaken branch instructions                |
|     :NONTAKEN_COND                                                           |
|            All macro conditional nontaken branch instructions                |
|     :TAKEN_CONDITIONAL                                                       |
|            Taken speculative and retired macro-conditional branches          |
|     :TAKEN_COND                                                              |
|            Taken speculative and retired macro-conditional branches          |
|     :TAKEN_DIRECT_JUMP                                                       |
|            Taken speculative and retired macro-conditional branch instruction|
|            s excluding calls and indirects                                   |
|     :TAKEN_INDIRECT_JUMP_NON_CALL_RET                                        |
|            Taken speculative and retired indirect branches excluding calls an|
|            d returns                                                         |
|     :TAKEN_INDIRECT_NEAR_RETURN                                              |
|            Taken speculative and retired indirect branches with return mnemon|
|            ic                                                                |
|     :TAKEN_DIRECT_NEAR_CALL                                                  |
|            Taken speculative and retired direct near calls                   |
|     :ALL_CONDITIONAL                                                         |
|            Speculative and retired macro-conditional branches                |
|     :ALL_COND                                                                |
|            Speculative and retired macro-conditional branches                |
|     :ANY_COND                                                                |
|            Speculative and retired macro-conditional branches                |
|     :ALL_DIRECT_JMP                                                          |
|            Speculative and retired macro-unconditional branches excluding cal|
|            ls and indirects                                                  |
|     :ALL_INDIRECT_JUMP_NON_CALL_RET                                          |
|            Speculative and retired indirect branches excluding calls and retu|
|            rns                                                               |
|     :ALL_INDIRECT_NEAR_RETURN                                                |
|            Speculative and retired indirect return branches                  |
|     :ALL_DIRECT_NEAR_CALL                                                    |
|            Speculative and retired direct near calls                         |
|     :TAKEN_INDIRECT_NEAR_CALL                                                |
|            All indirect calls, including both register and memory indirect   |
|     :ALL_BRANCHES                                                            |
|            All branch instructions executed                                  |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| BR_INST_RETIRED                                                              |
|            Branch instructions retired (Precise Event)                       |
|     :CONDITIONAL                                                             |
|            Counts all taken and not taken macro conditional branch instructio|
|            ns                                                                |
|     :COND                                                                    |
|            Counts all taken and not taken macro conditional branch instructio|
|            ns                                                                |
|     :NEAR_CALL                                                               |
|            Counts all macro direct and indirect near calls                   |
|     :ALL_BRANCHES                                                            |
|            Counts all taken and not taken macro branches including far branch|
|            es (architectural event)                                          |
|     :NEAR_RETURN                                                             |
|            Counts the number of near ret instructions retired                |
|     :NOT_TAKEN                                                               |
|            Counts all not taken macro branch instructions retired            |
|     :NEAR_TAKEN                                                              |
|            Counts the number of near branch taken instructions retired       |
|     :FAR_BRANCH                                                              |
|            Counts the number of far branch instructions retired              |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| BR_MISP_EXEC                                                                 |
|            Mispredicted branches executed                                    |
|     :NONTAKEN_CONDITIONAL                                                    |
|            Not taken speculative and retired mispredicted macro conditional b|
|            ranches                                                           |
|     :NONTAKEN_COND                                                           |
|            Not taken speculative and retired mispredicted macro conditional b|
|            ranches                                                           |
|     :TAKEN_CONDITIONAL                                                       |
|            Taken speculative and retired mispredicted macro conditional branc|
|            hes                                                               |
|     :TAKEN_COND                                                              |
|            Taken speculative and retired mispredicted macro conditional branc|
|            hes                                                               |
|     :TAKEN_INDIRECT_JUMP_NON_CALL_RET                                        |
|            Taken speculative and retired mispredicted indirect branches exclu|
|            ding calls and returns                                            |
|     :TAKEN_RETURN_NEAR                                                       |
|            Taken speculative and retired mispredicted indirect branches with |
|            return mnemonic                                                   |
|     :ALL_CONDITIONAL                                                         |
|            Speculative and retired mispredicted macro conditional branches   |
|     :ANY_COND                                                                |
|            Speculative and retired mispredicted macro conditional branches   |
|     :ALL_INDIRECT_JUMP_NON_CALL_RET                                          |
|            All mispredicted indirect branches that are not calls nor returns |
|     :ALL_BRANCHES                                                            |
|            Speculative and retired mispredicted macro conditional branches   |
|     :TAKEN_INDIRECT_NEAR_CALL                                                |
|            Taken speculative and retired mispredicted indirect calls         |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| BR_MISP_RETIRED                                                              |
|            Mispredicted retired branches (Precise Event)                     |
|     :CONDITIONAL                                                             |
|            All mispredicted macro conditional branch instructions            |
|     :COND                                                                    |
|            All mispredicted macro conditional branch instructions            |
|     :ALL_BRANCHES                                                            |
|            All mispredicted macro branches (architectural event)             |
|     :NEAR_TAKEN                                                              |
|            number of near branch instructions retired that were mispredicted |
|            and taken                                                         |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| CPL_CYCLES                                                                   |
|            Unhalted core cycles at a specific ring level                     |
|     :RING0                                                                   |
|            Unhalted core cycles when the thread is in ring 0                 |
|     :RING123                                                                 |
|            Unhalted core cycles when thread is in rings 1, 2, or 3           |
|     :RING0_TRANS                                                             |
|            Number of intervals between processor halts while thread is in rin|
|            g 0                                                               |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| CPU_CLK_THREAD_UNHALTED                                                      |
|            Count core clock cycles whenever the clock signal on the specific |
|            core is running (not halted)                                      |
|     :REF_XCLK                                                                |
|            Count Xclk pulses (100Mhz) when the core is unhalted              |
|     :REF_XCLK_ANY                                                            |
|            Count Xclk pulses 100Mhz) when the at least one thread on the phys|
|            ical core is unhalted                                             |
|     :REF_P                                                                   |
|            Cycles when the core is unhalted (count at 100 Mhz)               |
|     :THREAD_P                                                                |
|            Cycles when thread is not halted                                  |
|     :ONE_THREAD_ACTIVE                                                       |
|            Counts Xclk (100Mhz) pulses when this thread is unhalted and the o|
|            ther thread is halted                                             |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| CPU_CLK_UNHALTED                                                             |
|            Count core clock cycles whenever the clock signal on the specific |
|            core is running (not halted)                                      |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| CYCLE_ACTIVITY                                                               |
|            Stalled cycles                                                    |
|     :CYCLES_L2_PENDING                                                       |
|            Cycles with pending L2 miss loads (must use with HT off only)     |
|     :CYCLES_LDM_PENDING                                                      |
|            Cycles with pending memory loads                                  |
|     :CYCLES_L1D_PENDING                                                      |
|            Cycles with pending L1D load cache misses                         |
|     :STALLS_L1D_PENDING                                                      |
|            Executions stalls due to pending L1D load cache misses            |
|     :STALLS_L2_PENDING                                                       |
|            Execution stalls due to L2 pending loads (must use with HT off onl|
|            y)                                                                |
|     :STALLS_LDM_PENDING                                                      |
|            Execution stalls due to memory subsystem                          |
|     :CYCLES_NO_EXECUTE                                                       |
|            Cycles during which no instructions were executed in the execution|
|             stage of the pipeline                                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| DTLB_LOAD_MISSES                                                             |
|            Data TLB load misses                                              |
|     :MISS_CAUSES_A_WALK                                                      |
|            Misses in all DTLB levels that cause page walks                   |
|     :WALK_COMPLETED_4K                                                       |
|            Misses in all TLB levels causes a page walk that completes (4K)   |
|     :WALK_COMPLETED_2M_4M                                                    |
|            Misses in all TLB levels causes a page walk that completes (2M/4M)|
|                                                                              |
|     :WALK_COMPLETED                                                          |
|            Misses in all TLB levels causes a page walk of any page size that |
|            completes                                                         |
|     :WALK_DURATION                                                           |
|            Cycles when PMH is busy with page walks                           |
|     :STLB_HIT_4K                                                             |
|            Misses that miss the DTLB and hit the STLB (4K)                   |
|     :STLB_HIT_2M                                                             |
|            Misses that miss the DTLB and hit the STLB (2M)                   |
|     :STLB_HIT                                                                |
|            Number of cache load STLB hits. No page walk                      |
|     :PDE_CACHE_MISS                                                          |
|            DTLB misses with low part of linear-to-physical address translatio|
|            n missed                                                          |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| DTLB_STORE_MISSES                                                            |
|            Data TLB store misses                                             |
|     :MISS_CAUSES_A_WALK                                                      |
|            Misses in all DTLB levels that cause page walks                   |
|     :WALK_COMPLETED_4K                                                       |
|            Misses in all TLB levels causes a page walk that completes (4K)   |
|     :WALK_COMPLETED_2M_4M                                                    |
|            Misses in all TLB levels causes a page walk that completes (2M/4M)|
|                                                                              |
|     :WALK_COMPLETED                                                          |
|            Misses in all TLB levels causes a page walk of any page size that |
|            completes                                                         |
|     :WALK_DURATION                                                           |
|            Cycles when PMH is busy with page walks                           |
|     :STLB_HIT_4K                                                             |
|            Misses that miss the DTLB and hit the STLB (4K)                   |
|     :STLB_HIT_2M                                                             |
|            Misses that miss the DTLB and hit the STLB (2M)                   |
|     :STLB_HIT                                                                |
|            Number of cache load STLB hits. No page walk                      |
|     :PDE_CACHE_MISS                                                          |
|            DTLB misses with low part of linear-to-physical address translatio|
|            n missed                                                          |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| FP_ASSIST                                                                    |
|            X87 floating-point assists                                        |
|     :X87_OUTPUT                                                              |
|            Number of X87 FP assists due to output values                     |
|     :X87_INPUT                                                               |
|            Number of X87 FP assists due to input values                      |
|     :SIMD_OUTPUT                                                             |
|            Number of SIMD FP assists due to output values                    |
|     :SIMD_INPUT                                                              |
|            Number of SIMD FP assists due to input values                     |
|     :ANY                                                                     |
|            Cycles with any input/output SEE or FP assists                    |
|     :ALL                                                                     |
|            Cycles with any input and output SSE or FP assist                 |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| HLE_RETIRED                                                                  |
|            HLE execution (Precise Event)                                     |
|     :START                                                                   |
|            Number of times an HLE execution started                          |
|     :COMMIT                                                                  |
|            Number of times an HLE execution successfully committed           |
|     :ABORTED                                                                 |
|            Number of times an HLE execution aborted due to any reasons (multi|
|            ple categories may count as one) (Precise Event)                  |
|     :ABORTED_MISC1                                                           |
|            Number of times an HLE execution aborted due to various memory eve|
|            nts                                                               |
|     :ABORTED_MISC2                                                           |
|            Number of times an HLE execution aborted due to uncommon condition|
|            s                                                                 |
|     :ABORTED_MISC3                                                           |
|            Number of times an HLE execution aborted due to HLE-unfriendly ins|
|            tructions                                                         |
|     :ABORTED_MISC4                                                           |
|            Number of times an HLE execution aborted due to incompatible memor|
|            y type                                                            |
|     :ABORTED_MISC5                                                           |
|            Number of times an HLE execution aborted due to none of the other |
|            4 reasons (e.g., interrupt)                                       |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ICACHE                                                                       |
|            Instruction Cache                                                 |
|     :MISSES                                                                  |
|            Number of Instruction Cache, Streaming Buffer and Victim Cache Mis|
|            ses. Includes Uncacheable accesses                                |
|     :HIT                                                                     |
|            Number of Instruction Cache, Streaming Buffer and Victim Cache Rea|
|            ds. Includes cacheable and uncacheable accesses and uncacheable fe|
|            tches                                                             |
|     :IFETCH_STALL                                                            |
|            Number of cycles where a code-fetch stalled due to L1 instruction |
|            cache miss or an iTLB miss                                        |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| IDQ                                                                          |
|            IDQ operations                                                    |
|     :EMPTY                                                                   |
|            Cycles the Instruction Decode Queue (IDQ) is empty                |
|     :MITE_UOPS                                                               |
|            Number of uops delivered to Instruction Decode Queue (IDQ) from MI|
|            TE path                                                           |
|     :DSB_UOPS                                                                |
|            Number of uops delivered to Instruction Decode Queue (IDQ) from De|
|            code Stream Buffer (DSB) path                                     |
|     :MS_DSB_UOPS                                                             |
|            Uops initiated by Decode Stream Buffer (DSB) that are being delive|
|            red to Instruction Decode Queue (IDQ) while Microcode Sequencer (M|
|            S) is busy                                                        |
|     :MS_MITE_UOPS                                                            |
|            Uops initiated by MITE and delivered to Instruction Decode Queue (|
|            IDQ) while Microcode Sequencer (MS) is busy                       |
|     :MS_UOPS                                                                 |
|            Number of Uops were delivered into Instruction Decode Queue (IDQ) |
|            from MS, initiated by Decode Stream Buffer (DSB) or MITE          |
|     :MS_UOPS_CYCLES                                                          |
|            Number of cycles that Uops were delivered into Instruction Decode |
|            Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) |
|            or MITE                                                           |
|     :MS_SWITCHES                                                             |
|            Number of cycles that Uops were delivered into Instruction Decode |
|            Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) |
|            or MITE                                                           |
|     :MITE_UOPS_CYCLES                                                        |
|            Cycles when uops are being delivered to Instruction Decode Queue (|
|            IDQ) from MITE path                                               |
|     :DSB_UOPS_CYCLES                                                         |
|            Cycles when uops are being delivered to Instruction Decode Queue (|
|            IDQ) from Decode Stream Buffer (DSB) path                         |
|     :MS_DSB_UOPS_CYCLES                                                      |
|            Cycles when uops initiated by Decode Stream Buffer (DSB) are being|
|             delivered to Instruction Decode Queue (IDQ) while Microcode Seque|
|            ncer (MS) is busy                                                 |
|     :MS_DSB_OCCUR                                                            |
|            Deliveries to Instruction Decode Queue (IDQ) initiated by Decode S|
|            tream Buffer (DSB) while Microcode Sequencer (MS) is busy         |
|     :ALL_DSB_CYCLES_4_UOPS                                                   |
|            Cycles Decode Stream Buffer (DSB) is delivering 4 Uops            |
|     :ALL_DSB_CYCLES_ANY_UOPS                                                 |
|            Cycles Decode Stream Buffer (DSB) is delivering any Uop           |
|     :ALL_MITE_CYCLES_4_UOPS                                                  |
|            Cycles MITE is delivering 4 Uops                                  |
|     :ALL_MITE_CYCLES_ANY_UOPS                                                |
|            Cycles MITE is delivering any Uop                                 |
|     :ALL_MITE_UOPS                                                           |
|            Number of uops delivered to Instruction Decode Queue (IDQ) from an|
|            y path                                                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| IDQ_UOPS_NOT_DELIVERED                                                       |
|            Uops not delivered                                                |
|     :CORE                                                                    |
|            Count number of non-delivered uops to Resource Allocation Table (R|
|            AT)                                                               |
|     :CYCLES_0_UOPS_DELIV_CORE                                                |
|            Cycles per thread when 4 or more uops are not delivered to the Res|
|            ource Allocation Table (RAT) when backend is not stalled          |
|     :CYCLES_LE_1_UOP_DELIV_CORE                                              |
|            Cycles per thread when 3 or more uops are not delivered to the Res|
|            ource Allocation Table (RAT) when backend is not stalled          |
|     :CYCLES_LE_2_UOP_DELIV_CORE                                              |
|            Cycles with less than 2 uops delivered by the front end           |
|     :CYCLES_LE_3_UOP_DELIV_CORE                                              |
|            Cycles with less than 3 uops delivered by the front end           |
|     :CYCLES_FE_WAS_OK                                                        |
|            Cycles Front-End (FE) delivered 4 uops or Resource Allocation Tabl|
|            e (RAT) was stalling FE                                           |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| INST_RETIRED                                                                 |
|            Number of instructions retired (Precise Event)                    |
|     :ANY_P                                                                   |
|            Number of instructions retired. General Counter - architectural ev|
|            ent                                                               |
|     :ALL                                                                     |
|            Precise instruction retired event with HW to reduce effect of PEBS|
|             shadow in IP distribution (Precise Event)                        |
|     :TOTAL_CYCLES                                                            |
|            Number of cycles using always true condition                      |
|     :PREC_DIST                                                               |
|            Precise instruction retired event with HW to reduce effect of PEBS|
|             shadow in IP distribution                                        |
|     :X87                                                                     |
|            X87 FP operations retired with no exceptions. Also counts flows th|
|            at have several X87 or flows that use X87 uops in the exception ha|
|            ndling                                                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| INT_MISC                                                                     |
|            Miscellaneous interruptions                                       |
|     :RECOVERY_CYCLES                                                         |
|            Cycles waiting for the checkpoints in Resource Allocation Table (R|
|            AT) to be recovered after Nuke due to all other cases except JECle|
|            ar (e.g. whenever a ucode assist is needed like SSE exception, mem|
|            ory disambiguation, etc...)                                       |
|     :RECOVERY_CYCLES_ANY                                                     |
|            Core cycles the allocator was stalled due to recovery from earlier|
|             clear event for any thread running on the physical core (e.g. mis|
|            prediction or memory nuke)                                        |
|     :RECOVERY_STALLS_COUNT                                                   |
|            Number of occurrences waiting for Machine Clears                  |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ITLB                                                                         |
|            Instruction TLB                                                   |
|     :ITLB_FLUSH                                                              |
|            Flushing of the Instruction TLB (ITLB) pages independent of page s|
|            ize                                                               |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ITLB_MISSES                                                                  |
|            Instruction TLB misses                                            |
|     :MISS_CAUSES_A_WALK                                                      |
|            Misses in all DTLB levels that cause page walks                   |
|     :WALK_COMPLETED_4K                                                       |
|            Misses in all TLB levels causes a page walk that completes (4K)   |
|     :WALK_COMPLETED_2M_4M                                                    |
|            Misses in all TLB levels causes a page walk that completes (2M/4M)|
|                                                                              |
|     :WALK_COMPLETED                                                          |
|            Misses in all TLB levels causes a page walk of any page size that |
|            completes                                                         |
|     :WALK_DURATION                                                           |
|            Cycles when PMH is busy with page walks                           |
|     :STLB_HIT_4K                                                             |
|            Misses that miss the DTLB and hit the STLB (4K)                   |
|     :STLB_HIT_2M                                                             |
|            Misses that miss the DTLB and hit the STLB (2M)                   |
|     :STLB_HIT                                                                |
|            Number of cache load STLB hits. No page walk                      |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L1D                                                                          |
|            L1D cache                                                         |
|     :REPLACEMENT                                                             |
|            L1D Data line replacements                                        |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L1D_PEND_MISS                                                                |
|            L1D pending misses                                                |
|     :PENDING                                                                 |
|            Cycles with L1D load misses outstanding                           |
|     :PENDING_CYCLES                                                          |
|            Cycles with L1D load misses outstanding                           |
|     :OCCURRENCES                                                             |
|            Number L1D miss outstanding                                       |
|     :EDGE                                                                    |
|            Number L1D miss outstanding                                       |
|     :REQUEST_FB_FULL                                                         |
|            Number of times a demand request was blocked due to Fill Buffer (F|
|            B) unavailability                                                 |
|     :FB_FULL                                                                 |
|            Number of cycles a demand request was blocked due to Fill Buffer (|
|            FB) unavailability                                                |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L2_DEMAND_RQSTS                                                              |
|            Demand Data Read requests to L2                                   |
|     :WB_HIT                                                                  |
|            WB requests that hit L2 cache                                     |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L2_LINES_IN                                                                  |
|            L2 lines allocated                                                |
|     :I                                                                       |
|            L2 cache lines in I state filling L2                              |
|     :S                                                                       |
|            L2 cache lines in S state filling L2                              |
|     :E                                                                       |
|            L2 cache lines in E state filling L2                              |
|     :ALL                                                                     |
|            L2 cache lines filling L2                                         |
|     :ANY                                                                     |
|            L2 cache lines filling L2                                         |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L2_LINES_OUT                                                                 |
|            L2 lines evicted                                                  |
|     :DEMAND_CLEAN                                                            |
|            Number of clean L2 cachelines evicted by demand                   |
|     :DEMAND_DIRTY                                                            |
|            Number of dirty L2 cachelines evicted by demand                   |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L2_RQSTS                                                                     |
|            L2 requests                                                       |
|     :DEMAND_DATA_RD_MISS                                                     |
|            Demand Data Read requests that miss L2 cache                      |
|     :DEMAND_DATA_RD_HIT                                                      |
|            Demand Data Read requests that hit L2 cache                       |
|     :DEMAND_RFO_MISS                                                         |
|            RFO requests that miss L2 cache                                   |
|     :RFO_MISS                                                                |
|            RFO requests that miss L2 cache                                   |
|     :DEMAND_RFO_HIT                                                          |
|            RFO requests that hit L2 cache                                    |
|     :RFO_HIT                                                                 |
|            RFO requests that hit L2 cache                                    |
|     :CODE_RD_MISS                                                            |
|            L2 cache misses when fetching instructions                        |
|     :ALL_DEMAND_MISS                                                         |
|            All demand requests that miss the L2 cache                        |
|     :CODE_RD_HIT                                                             |
|            L2 cache hits when fetching instructions, code reads              |
|     :L2_PF_MISS                                                              |
|            Requests from the L2 hardware prefetchers that miss L2 cache      |
|     :PF_MISS                                                                 |
|            Requests from the L1/L2/L3 hardware prefetchers or Load software p|
|            refetches that miss L2 cache                                      |
|     :MISS                                                                    |
|            All requests that miss the L2 cache                               |
|     :L2_PF_HIT                                                               |
|            Requests from the L2 hardware prefetchers that hit L2 cache       |
|     :PF_HIT                                                                  |
|            Requests from the L2 hardware prefetchers that hit L2 cache       |
|     :ALL_DEMAND_DATA_RD                                                      |
|            Any data read request to L2 cache                                 |
|     :ALL_RFO                                                                 |
|            Any data RFO request to L2 cache                                  |
|     :ALL_CODE_RD                                                             |
|            Any code read request to L2 cache                                 |
|     :ALL_DEMAND_REFERENCES                                                   |
|            All demand requests to L2 cache                                   |
|     :ALL_PF                                                                  |
|            Any L2 HW prefetch request to L2 cache                            |
|     :REFERENCES                                                              |
|            All requests to L2 cache                                          |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| L2_TRANS                                                                     |
|            L2 transactions                                                   |
|     :DEMAND_DATA_RD                                                          |
|            Demand Data Read requests that access L2 cache                    |
|     :RFO                                                                     |
|            RFO requests that access L2 cache                                 |
|     :CODE_RD                                                                 |
|            L2 cache accesses when fetching instructions                      |
|     :ALL_PF                                                                  |
|            L2 or L3 HW prefetches that access L2 cache, including rejects    |
|     :L1D_WB                                                                  |
|            L1D writebacks that access L2 cache                               |
|     :L2_FILL                                                                 |
|            L2 fill requests that access L2 cache                             |
|     :L2_WB                                                                   |
|            L2 writebacks that access L2 cache                                |
|     :ALL_REQUESTS                                                            |
|            Transactions accessing L2 pipe                                    |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| LD_BLOCKS                                                                    |
|            Blocking loads                                                    |
|     :STORE_FORWARD                                                           |
|            Counts the number of loads blocked by overlapping with store buffe|
|            r entries that cannot be forwarded                                |
|     :NO_SR                                                                   |
|            number of times that split load operations are temporarily blocked|
|             because all resources for handling the split accesses are in use |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| LD_BLOCKS_PARTIAL                                                            |
|            Partial load blocks                                               |
|     :ADDRESS_ALIAS                                                           |
|            False dependencies in MOB due to partial compare on address       |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| LOAD_HIT_PRE                                                                 |
|            Load dispatches                                                   |
|     :SW_PF                                                                   |
|            Non software-prefetch load dispatches that hit FB allocated for so|
|            ftware prefetch                                                   |
|     :HW_PF                                                                   |
|            Non software-prefetch load dispatches that hit FB allocated for ha|
|            rdware prefetch                                                   |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| LOCK_CYCLES                                                                  |
|            Locked cycles in L1D and L2                                       |
|     :SPLIT_LOCK_UC_LOCK_DURATION                                             |
|            Cycles in which the L1D and L2 are locked, due to a UC lock or spl|
|            it lock                                                           |
|     :CACHE_LOCK_DURATION                                                     |
|            cycles that the L1D is locked                                     |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| LONGEST_LAT_CACHE                                                            |
|            L3 cache                                                          |
|     :MISS                                                                    |
|            Core-originated cacheable demand requests missed LLC - architectur|
|            al event                                                          |
|     :REFERENCE                                                               |
|            Core-originated cacheable demand requests that refer to LLC - arch|
|            itectural event                                                   |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MACHINE_CLEARS                                                               |
|            Machine clear asserted                                            |
|     :CYCLES                                                                  |
|            Cycles there was a Nuke. Account for both thread-specific and All |
|            Thread Nukes                                                      |
|     :MEMORY_ORDERING                                                         |
|            Number of Memory Ordering Machine Clears detected                 |
|     :SMC                                                                     |
|            Number of Self-modifying code (SMC) Machine Clears detected       |
|     :MASKMOV                                                                 |
|            This event counts the number of executed Intel AVX masked load ope|
|            rations that refer to an illegal address range with the mask bits |
|            set to 0                                                          |
|     :COUNT                                                                   |
|            Number of machine clears (nukes) of any type                      |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_LOAD_UOPS_L3_HIT_RETIRED                                                 |
|            L3 hit load uops retired (Precise Event)                          |
|     :XSNP_MISS                                                               |
|            Retired load uops which data sources were L3 hit and cross-core sn|
|            oop missed in on-pkg core cache                                   |
|     :XSNP_HIT                                                                |
|            Retired load uops which data sources were L3 and cross-core snoop |
|            hits in on-pkg core cache                                         |
|     :XSNP_HITM                                                               |
|            Load had HitM Response from a core on same socket (shared L3). (No|
|            n PEBS                                                            |
|     :XSNP_NONE                                                               |
|            Retired load uops which data sources were hits in L3 without snoop|
|            s required                                                        |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_LOAD_UOPS_LLC_HIT_RETIRED                                                |
|            L3 hit load uops retired (Precise Event)                          |
|     :XSNP_MISS                                                               |
|            Retired load uops which data sources were L3 hit and cross-core sn|
|            oop missed in on-pkg core cache                                   |
|     :XSNP_HIT                                                                |
|            Retired load uops which data sources were L3 and cross-core snoop |
|            hits in on-pkg core cache                                         |
|     :XSNP_HITM                                                               |
|            Load had HitM Response from a core on same socket (shared L3). (No|
|            n PEBS                                                            |
|     :XSNP_NONE                                                               |
|            Retired load uops which data sources were hits in L3 without snoop|
|            s required                                                        |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_LOAD_UOPS_L3_MISS_RETIRED                                                |
|            Load uops retired that missed the L3 (Precise Event)              |
|     :LOCAL_DRAM                                                              |
|            Retired load uops missing L3 cache but hitting local memory       |
|     :REMOTE_DRAM                                                             |
|            Number of retired load uops that missed L3 but were service by rem|
|            ote RAM, snoop not needed, snoop miss, snoop hit data not forwarde|
|            d (Precise Event)                                                 |
|     :REMOTE_HITM                                                             |
|            Number of retired load uops whose data sources was remote HITM (Pr|
|            ecise Event)                                                      |
|     :REMOTE_FWD                                                              |
|            Load uops that miss in the L3 whose data source was forwarded from|
|             a remote cache (Precise Event)                                   |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_LOAD_UOPS_LLC_MISS_RETIRED                                               |
|            Load uops retired that missed the L3 (Precise Event)              |
|     :LOCAL_DRAM                                                              |
|            Retired load uops missing L3 cache but hitting local memory       |
|     :REMOTE_DRAM                                                             |
|            Number of retired load uops that missed L3 but were service by rem|
|            ote RAM, snoop not needed, snoop miss, snoop hit data not forwarde|
|            d (Precise Event)                                                 |
|     :REMOTE_HITM                                                             |
|            Number of retired load uops whose data sources was remote HITM (Pr|
|            ecise Event)                                                      |
|     :REMOTE_FWD                                                              |
|            Load uops that miss in the L3 whose data source was forwarded from|
|             a remote cache (Precise Event)                                   |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_LOAD_UOPS_RETIRED                                                        |
|            Retired load uops (Precise Event)                                 |
|     :L1_HIT                                                                  |
|            Retired load uops with L1 cache hits as data source               |
|     :L2_HIT                                                                  |
|            Retired load uops with L2 cache hits as data source               |
|     :L3_HIT                                                                  |
|            Retired load uops with L3 cache hits as data source               |
|     :L1_MISS                                                                 |
|            Retired load uops which missed the L1D                            |
|     :L2_MISS                                                                 |
|            Retired load uops which missed the L2. Unknown data source exclude|
|            d                                                                 |
|     :L3_MISS                                                                 |
|            Retired load uops which missed the L3                             |
|     :HIT_LFB                                                                 |
|            Retired load uops which missed L1 but hit line fill buffer (LFB)  |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_TRANS_RETIRED                                                            |
|            Memory transactions retired (Precise Event)                       |
|     :LOAD_LATENCY                                                            |
|            Memory load instructions retired above programmed clocks, minimum |
|            threshold value is 3 (Precise Event and ldlat required)           |
|     :LATENCY_ABOVE_THRESHOLD                                                 |
|            Memory load instructions retired above programmed clocks, minimum |
|            threshold value is 3 (Precise Event and ldlat required)           |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :ldlat=0                                                                 |
|            load latency threshold (cycles, [3-65535])                        |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MEM_UOPS_RETIRED                                                             |
|            Memory uops retired (Precise Event)                               |
|     :STLB_MISS_LOADS                                                         |
|            Load uops with true STLB miss retired to architected path         |
|     :STLB_MISS_STORES                                                        |
|            Store uops with true STLB miss retired to architected path        |
|     :LOCK_LOADS                                                              |
|            Load uops with locked access retired                              |
|     :SPLIT_LOADS                                                             |
|            Line-splitted load uops retired                                   |
|     :SPLIT_STORES                                                            |
|            Line-splitted store uops retired                                  |
|     :ALL_LOADS                                                               |
|            All load uops retired                                             |
|     :ALL_STORES                                                              |
|            All store uops retired                                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MISALIGN_MEM_REF                                                             |
|            Misaligned memory references                                      |
|     :LOADS                                                                   |
|            Speculative cache-line split load uops dispatched to the L1D      |
|     :STORES                                                                  |
|            Speculative cache-line split store-address uops dispatched to L1D |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| MOVE_ELIMINATION                                                             |
|            Move Elimination                                                  |
|     :INT_ELIMINATED                                                          |
|            Number of integer Move Elimination candidate uops that were elimin|
|            ated                                                              |
|     :SIMD_ELIMINATED                                                         |
|            Number of SIMD Move Elimination candidate uops that were eliminate|
|            d                                                                 |
|     :INT_NOT_ELIMINATED                                                      |
|            Number of integer Move Elimination candidate uops that were not el|
|            iminated                                                          |
|     :SIMD_NOT_ELIMINATED                                                     |
|            Number of SIMD Move Elimination candidate uops that were not elimi|
|            nated                                                             |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| OFFCORE_REQUESTS                                                             |
|            Demand Data Read requests sent to uncore                          |
|     :DEMAND_DATA_RD                                                          |
|            Demand data read requests sent to uncore (use with HT off only)   |
|     :DEMAND_CODE_RD                                                          |
|            Demand code read requests sent to uncore (use with HT off only)   |
|     :DEMAND_RFO                                                              |
|            Demand RFOs requests sent to uncore (use with HT off only)        |
|     :ALL_DATA_RD                                                             |
|            Data read requests sent to uncore (use with HT off only)          |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| OTHER_ASSISTS                                                                |
|            Software assist                                                   |
|     :AVX_TO_SSE                                                              |
|            Number of transitions from AVX-256 to legacy SSE when penalty appl|
|            icable                                                            |
|     :SSE_TO_AVX                                                              |
|            Number of transitions from legacy SSE to AVX-256 when penalty appl|
|            icable                                                            |
|     :ANY_WB_ASSIST                                                           |
|            Number of times any microcode assist is invoked by HW upon uop wri|
|            teback                                                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| RESOURCE_STALLS                                                              |
|            Cycles Allocation is stalled due to Resource Related reason       |
|     :ANY                                                                     |
|            Cycles Allocation is stalled due to Resource Related reason       |
|     :ALL                                                                     |
|            Cycles Allocation is stalled due to Resource Related reason       |
|     :RS                                                                      |
|            Stall cycles caused by absence of eligible entries in Reservation |
|            Station (RS)                                                      |
|     :SB                                                                      |
|            Cycles Allocator is stalled due to Store Buffer full (not includin|
|            g draining from synch)                                            |
|     :ROB                                                                     |
|            ROB full stall cycles                                             |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ROB_MISC_EVENTS                                                              |
|            ROB miscellaneous events                                          |
|     :LBR_INSERTS                                                             |
|            Count each time an new Last Branch Record (LBR) is inserted       |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| RS_EVENTS                                                                    |
|            Reservation Station                                               |
|     :EMPTY_CYCLES                                                            |
|            Cycles the Reservation Station (RS) is empty for this thread      |
|     :EMPTY_END                                                               |
|            Counts number of time the Reservation Station (RS) goes from empty|
|             to non-empty                                                     |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| RTM_RETIRED                                                                  |
|            Restricted Transaction Memory execution (Precise Event)           |
|     :START                                                                   |
|            Number of times an RTM execution started                          |
|     :COMMIT                                                                  |
|            Number of times an RTM execution successfully committed           |
|     :ABORTED                                                                 |
|            Number of times an RTM execution aborted due to any reasons (multi|
|            ple categories may count as one) (Precise Event)                  |
|     :ABORTED_MISC1                                                           |
|            Number of times an RTM execution aborted due to various memory eve|
|            nts                                                               |
|     :ABORTED_MISC2                                                           |
|            Number of times an RTM execution aborted due to uncommon condition|
|            s                                                                 |
|     :ABORTED_MISC3                                                           |
|            Number of times an RTM execution aborted due to RTM-unfriendly ins|
|            tructions                                                         |
|     :ABORTED_MISC4                                                           |
|            Number of times an RTM execution aborted due to incompatible memor|
|            y type                                                            |
|     :ABORTED_MISC5                                                           |
|            Number of times an RTM execution aborted due to none of the other |
|            4 reasons (e.g., interrupt)                                       |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| TLB_FLUSH                                                                    |
|            TLB flushes                                                       |
|     :DTLB_THREAD                                                             |
|            Count number of DTLB flushes of thread-specific entries           |
|     :STLB_ANY                                                                |
|            Count number of any STLB flushes                                  |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UOPS_EXECUTED                                                                |
|            Uops executed                                                     |
|     :CORE                                                                    |
|            Number of uops executed from any thread                           |
|     :STALL_CYCLES                                                            |
|            Number of cycles with no uops executed                            |
|     :CYCLES_GE_1_UOP_EXEC                                                    |
|            Cycles where at least 1 uop was executed per thread               |
|     :CYCLES_GE_2_UOPS_EXEC                                                   |
|            Cycles where at least 2 uops were executed per thread             |
|     :CYCLES_GE_3_UOPS_EXEC                                                   |
|            Cycles where at least 3 uops were executed per thread             |
|     :CYCLES_GE_4_UOPS_EXEC                                                   |
|            Cycles where at least 4 uops were executed per thread             |
|     :CORE_CYCLES_GE_1                                                        |
|            Cycles where at least 1 uop was executed from any thread          |
|     :CORE_CYCLES_GE_2                                                        |
|            Cycles where at least 2 uops were executed from any thread        |
|     :CORE_CYCLES_GE_3                                                        |
|            Cycles where at least 3 uops were executed from any thread        |
|     :CORE_CYCLES_GE_4                                                        |
|            Cycles where at least 4 uops were executed from any thread        |
|     :CORE_CYCLES_NONE                                                        |
|            Cycles where no uop is executed on any thread                     |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| LSD                                                                          |
|            Loop stream detector                                              |
|     :UOPS                                                                    |
|            Number of uops delivered by the Loop Stream Detector (LSD)        |
|     :ACTIVE                                                                  |
|            Cycles with uops delivered by the LSD but which did not come from |
|            decoder                                                           |
|     :CYCLES_4_UOPS                                                           |
|            Cycles with 4 uops delivered by the LSD but which did not come fro|
|            m decoder                                                         |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UOPS_EXECUTED_PORT                                                           |
|            Uops dispatched to specific ports                                 |
|     :PORT_0                                                                  |
|            Cycles which a Uop is executed on port 0                          |
|     :PORT_1                                                                  |
|            Cycles which a Uop is executed on port 1                          |
|     :PORT_2                                                                  |
|            Cycles which a Uop is executed on port 2                          |
|     :PORT_3                                                                  |
|            Cycles which a Uop is executed on port 3                          |
|     :PORT_4                                                                  |
|            Cycles which a Uop is executed on port 4                          |
|     :PORT_5                                                                  |
|            Cycles which a Uop is executed on port 5                          |
|     :PORT_6                                                                  |
|            Cycles which a Uop is executed on port 6                          |
|     :PORT_7                                                                  |
|            Cycles which a Uop is executed on port 7                          |
|     :PORT_0_CORE                                                             |
|            tbd                                                               |
|     :PORT_1_CORE                                                             |
|            tbd                                                               |
|     :PORT_2_CORE                                                             |
|            tbd                                                               |
|     :PORT_3_CORE                                                             |
|            tbd                                                               |
|     :PORT_4_CORE                                                             |
|            tbd                                                               |
|     :PORT_5_CORE                                                             |
|            tbd                                                               |
|     :PORT_6_CORE                                                             |
|            tbd                                                               |
|     :PORT_7_CORE                                                             |
|            tbd                                                               |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UOPS_DISPATCHED_PORT                                                         |
|            Uops dispatched to specific ports                                 |
|     :PORT_0                                                                  |
|            Cycles which a Uop is executed on port 0                          |
|     :PORT_1                                                                  |
|            Cycles which a Uop is executed on port 1                          |
|     :PORT_2                                                                  |
|            Cycles which a Uop is executed on port 2                          |
|     :PORT_3                                                                  |
|            Cycles which a Uop is executed on port 3                          |
|     :PORT_4                                                                  |
|            Cycles which a Uop is executed on port 4                          |
|     :PORT_5                                                                  |
|            Cycles which a Uop is executed on port 5                          |
|     :PORT_6                                                                  |
|            Cycles which a Uop is executed on port 6                          |
|     :PORT_7                                                                  |
|            Cycles which a Uop is executed on port 7                          |
|     :PORT_0_CORE                                                             |
|            tbd                                                               |
|     :PORT_1_CORE                                                             |
|            tbd                                                               |
|     :PORT_2_CORE                                                             |
|            tbd                                                               |
|     :PORT_3_CORE                                                             |
|            tbd                                                               |
|     :PORT_4_CORE                                                             |
|            tbd                                                               |
|     :PORT_5_CORE                                                             |
|            tbd                                                               |
|     :PORT_6_CORE                                                             |
|            tbd                                                               |
|     :PORT_7_CORE                                                             |
|            tbd                                                               |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UOPS_ISSUED                                                                  |
|            Uops issued                                                       |
|     :ANY                                                                     |
|            Number of Uops issued by the Resource Allocation Table (RAT) to th|
|            e Reservation Station (RS)                                        |
|     :ALL                                                                     |
|            Number of Uops issued by the Resource Allocation Table (RAT) to th|
|            e Reservation Station (RS)                                        |
|     :FLAGS_MERGE                                                             |
|            Number of flags-merge uops being allocated. Such uops adds delay  |
|     :SLOW_LEA                                                                |
|            Number of slow LEA or similar uops allocated. Such uop has 3 sourc|
|            es regardless if result of LEA instruction or not                 |
|     :SINGLE_MUL                                                              |
|            Number of Multiply packed/scalar single precision uops allocated  |
|     :STALL_CYCLES                                                            |
|            Counts the number of cycles no uops issued by this thread         |
|     :CORE_STALL_CYCLES                                                       |
|            Counts the number of cycles no uops issued on this core           |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| UOPS_RETIRED                                                                 |
|            Uops retired (Precise Event)                                      |
|     :ALL                                                                     |
|            All uops that actually retired                                    |
|     :ANY                                                                     |
|            All uops that actually retired                                    |
|     :RETIRE_SLOTS                                                            |
|            number of retirement slots used non PEBS                          |
|     :STALL_CYCLES                                                            |
|            Cycles no executable uops retired (Precise Event)                 |
|     :TOTAL_CYCLES                                                            |
|            Number of cycles using always true condition applied to PEBS uops |
|            retired event                                                     |
|     :CORE_STALL_CYCLES                                                       |
|            Cycles no executable uops retired on core (Precise Event)         |
|     :STALL_OCCURRENCES                                                       |
|            Number of transitions from stalled to unstalled execution (Precise|
|             Event)                                                           |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :precise=0                                                               |
|            precise ip                                                        |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| TX_MEM                                                                       |
|            Transactional memory aborts                                       |
|     :ABORT_CONFLICT                                                          |
|            Number of times a transactional abort was signaled due to data con|
|            flict on a transactionally accessed address                       |
|     :ABORT_CAPACITY_WRITE                                                    |
|            Number of times a transactional abort was signaled due to data cap|
|            acity limitation for transactional writes                         |
|     :ABORT_HLE_STORE_TO_ELIDED_LOCK                                          |
|            Number of times a HLE transactional execution aborted due to a non|
|             xrelease prefixed instruction writing to an elided lock in the el|
|            ision buffer                                                      |
|     :ABORT_HLE_ELISION_BUFFER_NOT_EMPTY                                      |
|            Number of times a HLE transactional execution aborted due to NoAll|
|            ocatedElisionBuffer being non-zero                                |
|     :ABORT_HLE_ELISION_BUFFER_MISMATCH                                       |
|            Number of times a HLE transaction execution aborted due to xreleas|
|            e lock not satisfying the address and value requirements in the el|
|            ision buffer                                                      |
|     :ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT                          |
|            Number of times a HLE transaction execution aborted due to an unsu|
|            pported read alignment from the elision buffer                    |
|     :ABORT_HLE_ELISION_BUFFER_FULL                                           |
|            Number of times a HLE clock could not be elided due to ElisionBuff|
|            erAvailable being zero                                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| TX_EXEC                                                                      |
|            Transactional execution                                           |
|     :MISC1                                                                   |
|            Number of times a class of instructions that may cause a transacti|
|            onal abort was executed. Since this is the count of execution, it |
|            may not always cause a transactional abort                        |
|     :MISC2                                                                   |
|            Number of times a class of instructions that may cause a transacti|
|            onal abort was executed inside a transactional region             |
|     :MISC3                                                                   |
|            Number of times an instruction execution caused the supported nest|
|             count to be exceeded                                             |
|     :MISC4                                                                   |
|            Number of times an instruction with HLE xbegin prefix was executed|
|             inside a RTM transactional region                                |
|     :MISC5                                                                   |
|            Number of times an instruction with HLE xacquire prefix was execut|
|            ed inside a RTM transactional region                              |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| OFFCORE_REQUESTS_OUTSTANDING                                                 |
|            Outstanding offcore requests                                      |
|     :ALL_DATA_RD_CYCLES                                                      |
|            Cycles with cacheable data read transactions in the superQ (use wi|
|            th HT off only)                                                   |
|     :DEMAND_CODE_RD_CYCLES                                                   |
|            Cycles with demand code reads transactions in the superQ (use with|
|             HT off only)                                                     |
|     :DEMAND_DATA_RD_CYCLES                                                   |
|            Cycles with demand data read transactions in the superQ (use with |
|            HT off only)                                                      |
|     :ALL_DATA_RD                                                             |
|            Cacheable data read transactions in the superQ every cycle (use wi|
|            th HT off only)                                                   |
|     :DEMAND_CODE_RD                                                          |
|            Code read transactions in the superQ every cycle (use with HT off |
|            only)                                                             |
|     :DEMAND_DATA_RD                                                          |
|            Demand data read transactions in the superQ every cycle (use with |
|            HT off only)                                                      |
|     :DEMAND_DATA_RD_GE_6                                                     |
|            Cycles with at lesat 6 offcore outstanding demand data read reques|
|            ts in the uncore queue                                            |
|     :DEMAND_RFO                                                              |
|            Outstanding RFO (store) transactions in the superQ every cycle (us|
|            e with HT off only)                                               |
|     :DEMAND_RFO_CYCLES                                                       |
|            Cycles with outstanding RFO (store) transactions in the superQ (us|
|            e with HT off only)                                               |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ILD_STALL                                                                    |
|            Instruction Length Decoder stalls                                 |
|     :LCP                                                                     |
|            Stall caused by changing prefix length of the instruction         |
|     :IQ_FULL                                                                 |
|            Stall cycles due to IQ full                                       |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| PAGE_WALKER_LOADS                                                            |
|            Page walker loads                                                 |
|     :DTLB_L1                                                                 |
|            Number of DTLB page walker loads that hit in the L1D and line fill|
|             buffer                                                           |
|     :ITLB_L1                                                                 |
|            Number of ITLB page walker loads that hit in the L1I and line fill|
|             buffer                                                           |
|     :DTLB_L2                                                                 |
|            Number of DTLB page walker loads that hit in the L2               |
|     :ITLB_L2                                                                 |
|            Number of ITLB page walker loads that hit in the L2               |
|     :DTLB_L3                                                                 |
|            Number of DTLB page walker loads that hit in the L3               |
|     :ITLB_L3                                                                 |
|            Number of ITLB page walker loads that hit in the L3               |
|     :EPT_DTLB_L1                                                             |
|            Number of extended page table walks from the DTLB that hit in the |
|            L1D and line fill buffer                                          |
|     :EPT_ITLB_L1                                                             |
|            Number of extended page table walks from the ITLB that hit in the |
|            L1D and line fill buffer                                          |
|     :EPT_DTLB_L2                                                             |
|            Number of extended page table walks from the DTLB that hit in the |
|            L2                                                                |
|     :EPT_ITLB_L2                                                             |
|            Number of extended page table walks from the ITLB that hit in the |
|            L2                                                                |
|     :EPT_DTLB_L3                                                             |
|            Number of extended page table walks from the DTLB that hit in the |
|            L3                                                                |
|     :EPT_ITLB_L3                                                             |
|            Number of extended page table walks from the ITLB that hit in the |
|            L3                                                                |
|     :DTLB_MEMORY                                                             |
|            Number of DTLB page walker loads that hit memory                  |
|     :ITLB_MEMORY                                                             |
|            Number of ITLB page walker loads that hit memory                  |
|     :EPT_DTLB_MEMORY                                                         |
|            Number of extended page table walks from the DTLB that hit memory |
|     :EPT_ITLB_MEMORY                                                         |
|            Number of extended page table walks from the ITLB that hit memory |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| DSB2MITE_SWITCHES                                                            |
|            Number of DSB to MITE switches                                    |
|     :PENALTY_CYCLES                                                          |
|            Number of DSB to MITE switch true penalty cycles                  |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| EPT                                                                          |
|            Extended page table                                               |
|     :WALK_CYCLES                                                             |
|            Cycles for an extended page table walk                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| ARITH                                                                        |
|            Counts arithmetic multiply operations                             |
|     :DIVIDER_UOPS                                                            |
|            Number of uops executed by divider                                |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| AVX                                                                          |
|            Counts AVX instructions                                           |
|     :ALL                                                                     |
|            Approximate counts of AVX and AVX2 256-bit instructions, including|
|             non-arithmetic instructions, loads, and stores. May count non-AVX|
|             instructions using 256-bit operations                            |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| SQ_MISC                                                                      |
|            SuperQueue miscellaneous                                          |
|     :SPLIT_LOCK                                                              |
|            Number of split locks in the super queue (SQ)                     |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| OFFCORE_REQUESTS_BUFFER                                                      |
|            Offcore reqest buffer                                             |
|     :SQ_FULL                                                                 |
|            Number of cycles the offcore requests buffer is full              |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| OFFCORE_RESPONSE_0                                                           |
|            Offcore response event (must provide at least one request type and|
|             either any_response or any combination of supplier + snoop)      |
|     :DMND_DATA_RD                                                            |
|            Request: number of demand and DCU prefetch data reads of full and |
|            partial cachelines as well as demand data page table entry cacheli|
|            ne reads. Does not count L2 data read prefetches or instruction fe|
|            tches                                                             |
|     :DMND_RFO                                                                |
|            Request: number of demand and DCU prefetch reads for ownership (RF|
|            O) requests generated by a write to data cacheline. Does not count|
|             L2 RFO prefetches                                                |
|     :DMND_CODE_RD                                                            |
|            Request: number of demand and DCU prefetch instruction cacheline r|
|            eads. Does not count L2 code read prefetches                      |
|     :DMND_IFETCH                                                             |
|            Request: number of demand and DCU prefetch instruction cacheline r|
|            eads. Does not count L2 code read prefetches                      |
|     :WB                                                                      |
|            Request: number of writebacks (modified to exclusive) transactions|
|                                                                              |
|     :PF_DATA_RD                                                              |
|            Request: number of data cacheline reads generated by L2 prefetcher|
|            s                                                                 |
|     :PF_RFO                                                                  |
|            Request: number of RFO requests generated by L2 prefetchers       |
|     :PF_CODE_RD                                                              |
|            Request: number of code reads generated by L2 prefetchers         |
|     :PF_IFETCH                                                               |
|            Request: number of code reads generated by L2 prefetchers         |
|     :PF_L3_DATA_RD                                                           |
|            Request: number of L2 prefetcher requests to L3 for loads         |
|     :PF_L3_RFO                                                               |
|            Request: number of RFO requests generated by L2 prefetcher        |
|     :PF_L3_CODE_RD                                                           |
|            Request: number of L2 prefetcher requests to L3 for instruction fe|
|            tches                                                             |
|     :PF_L3_IFETCH                                                            |
|            Request: number of L2 prefetcher requests to L3 for instruction fe|
|            tches                                                             |
|     :SPLIT_LOCK_UC_LOCK                                                      |
|            Request: number of bus lock and split lock requests               |
|     :BUS_LOCKS                                                               |
|            Request: number of bus lock and split lock requests               |
|     :STRM_ST                                                                 |
|            Request: number of streaming store requests                       |
|     :OTHER                                                                   |
|            Request: counts one of the following transaction types, including |
|            L3 invalidate, I/O, full or partial writes, WC or non-temporal sto|
|            res, CLFLUSH, Fences, lock, unlock, split lock                    |
|     :ANY_CODE_RD                                                             |
|            Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD |
|     :ANY_IFETCH                                                              |
|            Request: combination of PF_CODE_RD | PF_L3_CODE_RD                |
|     :ANY_REQUEST                                                             |
|            Request: combination of all request umasks                        |
|     :ANY_DATA                                                                |
|            Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD    |
|     :ANY_RFO                                                                 |
|            Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO             |
|     :ANY_RESPONSE                                                            |
|            Response: count any response type                                 |
|     :NO_SUPP                                                                 |
|            Supplier: counts number of times supplier information is not avail|
|            able                                                              |
|     :L3_HITM                                                                 |
|            Supplier: counts L3 hits in M-state (initial lookup)              |
|     :L3_HITE                                                                 |
|            Supplier: counts L3 hits in E-state                               |
|     :L3_HITS                                                                 |
|            Supplier: counts L3 hits in S-state                               |
|     :L3_HITF                                                                 |
|            Supplier: counts L3 hits in F-state                               |
|     :L3_HIT                                                                  |
|            Supplier: counts L3 hits in any state (M, E, S, F)                |
|     :L3_MISS_LOCAL                                                           |
|            Supplier: counts L3 misses to local DRAM                          |
|     :L3_MISS_REMOTE_HOP0                                                     |
|            Supplier: counts L3 misses to remote DRAM with 0 hop              |
|     :L3_MISS_REMOTE_HOP1                                                     |
|            Supplier: counts L3 misses to remote DRAM with 1 hop              |
|     :L3_MISS_REMOTE_HOP2P                                                    |
|            Supplier: counts L3 misses to remote DRAM with 2P hops            |
|     :L3_MISS                                                                 |
|            Supplier: counts L3 misses to local or remote DRAM                |
|     :L3_MISS_REMOTE                                                          |
|            Supplier: counts L3 misses to remote node                         |
|     :L3_MISS_REMOTE_DRAM                                                     |
|            Supplier: counts L3 misses to remote node                         |
|     :SPL_HIT                                                                 |
|            Supplier: counts L3 supplier hit                                  |
|     :SNP_NONE                                                                |
|            Snoop: counts number of times no snoop-related information is avai|
|            lable                                                             |
|     :SNP_NOT_NEEDED                                                          |
|            Snoop: counts the number of times no snoop was needed to satisfy t|
|            he request                                                        |
|     :SNP_MISS                                                                |
|            Snoop: counts number of times a snoop was needed and it missed all|
|             snooped caches                                                   |
|     :SNP_NO_FWD                                                              |
|            Snoop: counts number of times a snoop was needed and it hit in at |
|            leas one snooped cache                                            |
|     :SNP_FWD                                                                 |
|            Snoop: counts number of times a snoop was needed and data was forw|
|            arded from a remote socket                                        |
|     :SNP_HITM                                                                |
|            Snoop: counts number of times a snoop was needed and it hitM-ed in|
|             local or remote cache                                            |
|     :SNP_NON_DRAM                                                            |
|            Snoop:  counts number of times target was a non-DRAM system addres|
|            s. This includes MMIO transactions                                |
|     :SNP_ANY                                                                 |
|            Snoop: any snoop reason                                           |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
--------------------------------------------------------------------------------
| OFFCORE_RESPONSE_1                                                           |
|            Offcore response event (must provide at least one request type and|
|             either any_response or any combination of supplier + snoop)      |
|     :DMND_DATA_RD                                                            |
|            Request: number of demand and DCU prefetch data reads of full and |
|            partial cachelines as well as demand data page table entry cacheli|
|            ne reads. Does not count L2 data read prefetches or instruction fe|
|            tches                                                             |
|     :DMND_RFO                                                                |
|            Request: number of demand and DCU prefetch reads for ownership (RF|
|            O) requests generated by a write to data cacheline. Does not count|
|             L2 RFO prefetches                                                |
|     :DMND_CODE_RD                                                            |
|            Request: number of demand and DCU prefetch instruction cacheline r|
|            eads. Does not count L2 code read prefetches                      |
|     :DMND_IFETCH                                                             |
|            Request: number of demand and DCU prefetch instruction cacheline r|
|            eads. Does not count L2 code read prefetches                      |
|     :WB                                                                      |
|            Request: number of writebacks (modified to exclusive) transactions|
|                                                                              |
|     :PF_DATA_RD                                                              |
|            Request: number of data cacheline reads generated by L2 prefetcher|
|            s                                                                 |
|     :PF_RFO                                                                  |
|            Request: number of RFO requests generated by L2 prefetchers       |
|     :PF_CODE_RD                                                              |
|            Request: number of code reads generated by L2 prefetchers         |
|     :PF_IFETCH                                                               |
|            Request: number of code reads generated by L2 prefetchers         |
|     :PF_L3_DATA_RD                                                           |
|            Request: number of L2 prefetcher requests to L3 for loads         |
|     :PF_L3_RFO                                                               |
|            Request: number of RFO requests generated by L2 prefetcher        |
|     :PF_L3_CODE_RD                                                           |
|            Request: number of L2 prefetcher requests to L3 for instruction fe|
|            tches                                                             |
|     :PF_L3_IFETCH                                                            |
|            Request: number of L2 prefetcher requests to L3 for instruction fe|
|            tches                                                             |
|     :SPLIT_LOCK_UC_LOCK                                                      |
|            Request: number of bus lock and split lock requests               |
|     :BUS_LOCKS                                                               |
|            Request: number of bus lock and split lock requests               |
|     :STRM_ST                                                                 |
|            Request: number of streaming store requests                       |
|     :OTHER                                                                   |
|            Request: counts one of the following transaction types, including |
|            L3 invalidate, I/O, full or partial writes, WC or non-temporal sto|
|            res, CLFLUSH, Fences, lock, unlock, split lock                    |
|     :ANY_CODE_RD                                                             |
|            Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD |
|     :ANY_IFETCH                                                              |
|            Request: combination of PF_CODE_RD | PF_L3_CODE_RD                |
|     :ANY_REQUEST                                                             |
|            Request: combination of all request umasks                        |
|     :ANY_DATA                                                                |
|            Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD    |
|     :ANY_RFO                                                                 |
|            Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO             |
|     :ANY_RESPONSE                                                            |
|            Response: count any response type                                 |
|     :NO_SUPP                                                                 |
|            Supplier: counts number of times supplier information is not avail|
|            able                                                              |
|     :L3_HITM                                                                 |
|            Supplier: counts L3 hits in M-state (initial lookup)              |
|     :L3_HITE                                                                 |
|            Supplier: counts L3 hits in E-state                               |
|     :L3_HITS                                                                 |
|            Supplier: counts L3 hits in S-state                               |
|     :L3_HITF                                                                 |
|            Supplier: counts L3 hits in F-state                               |
|     :L3_HIT                                                                  |
|            Supplier: counts L3 hits in any state (M, E, S, F)                |
|     :L3_MISS_LOCAL                                                           |
|            Supplier: counts L3 misses to local DRAM                          |
|     :L3_MISS_REMOTE_HOP0                                                     |
|            Supplier: counts L3 misses to remote DRAM with 0 hop              |
|     :L3_MISS_REMOTE_HOP1                                                     |
|            Supplier: counts L3 misses to remote DRAM with 1 hop              |
|     :L3_MISS_REMOTE_HOP2P                                                    |
|            Supplier: counts L3 misses to remote DRAM with 2P hops            |
|     :L3_MISS                                                                 |
|            Supplier: counts L3 misses to local or remote DRAM                |
|     :L3_MISS_REMOTE                                                          |
|            Supplier: counts L3 misses to remote node                         |
|     :L3_MISS_REMOTE_DRAM                                                     |
|            Supplier: counts L3 misses to remote node                         |
|     :SPL_HIT                                                                 |
|            Supplier: counts L3 supplier hit                                  |
|     :SNP_NONE                                                                |
|            Snoop: counts number of times no snoop-related information is avai|
|            lable                                                             |
|     :SNP_NOT_NEEDED                                                          |
|            Snoop: counts the number of times no snoop was needed to satisfy t|
|            he request                                                        |
|     :SNP_MISS                                                                |
|            Snoop: counts number of times a snoop was needed and it missed all|
|             snooped caches                                                   |
|     :SNP_NO_FWD                                                              |
|            Snoop: counts number of times a snoop was needed and it hit in at |
|            leas one snooped cache                                            |
|     :SNP_FWD                                                                 |
|            Snoop: counts number of times a snoop was needed and data was forw|
|            arded from a remote socket                                        |
|     :SNP_HITM                                                                |
|            Snoop: counts number of times a snoop was needed and it hitM-ed in|
|             local or remote cache                                            |
|     :SNP_NON_DRAM                                                            |
|            Snoop:  counts number of times target was a non-DRAM system addres|
|            s. This includes MMIO transactions                                |
|     :SNP_ANY                                                                 |
|            Snoop: any snoop reason                                           |
|     :e=0                                                                     |
|            edge level (may require counter-mask >= 1)                        |
|     :i=0                                                                     |
|            invert                                                            |
|     :c=0                                                                     |
|            counter-mask in range [0-255]                                     |
|     :t=0                                                                     |
|            measure any thread                                                |
|     :intx=0                                                                  |
|            monitor only inside transactional memory region                   |
|     :intxcp=0                                                                |
|            do not count occurrences inside aborted transactional memory regio|
|            n                                                                 |
|     :u=0                                                                     |
|            monitor at user level                                             |
|     :k=0                                                                     |
|            monitor at kernel level                                           |
|     :period=0                                                                |
|            sampling period                                                   |
|     :freq=0                                                                  |
|            sampling frequency (Hz)                                           |
|     :excl=0                                                                  |
|            exclusive access                                                  |
|     :mg=0                                                                    |
|            monitor guest execution                                           |
|     :mh=0                                                                    |
|            monitor host execution                                            |
|     :cpu=0                                                                   |
|            CPU to program                                                    |
|     :pinned=0                                                                |
|            pin event to counters                                             |
===============================================================================
 Native Events in Component: cray_rapl
===============================================================================
| cray_rapl:::UNITS:POWER                                                      |
|            Scaling factor for power (internal)                               |
--------------------------------------------------------------------------------
| cray_rapl:::UNITS:ENERGY                                                     |
|            Scaling factor for energy (internal)                              |
--------------------------------------------------------------------------------
| cray_rapl:::UNITS:TIME                                                       |
|            Scaling factor for time (internal)                                |
--------------------------------------------------------------------------------
| cray_rapl:::THERMAL_SPEC                                                     |
|            Thermal specification                                             |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_rapl:::MINIMUM_POWER                                                    |
|            Minimum power                                                     |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_rapl:::MAXIMUM_POWER                                                    |
|            Maximum power                                                     |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_rapl:::MAXIMUM_TIME_WINDOW                                              |
|            Maximum time window                                               |
|     Units: s                                                                 |
--------------------------------------------------------------------------------
| cray_rapl:::PACKAGE_ENERGY                                                   |
|            Energy used by chip package                                       |
|     Units: nJ                                                                |
--------------------------------------------------------------------------------
| cray_rapl:::DRAM_ENERGY                                                      |
|            Energy used by DRAM in package                                    |
|     Units: nJ                                                                |
===============================================================================
 Native Events in Component: cray_pm
===============================================================================
| cray_pm:::PM_POWER_CAP:NODE                                                  |
|            Compute node power cap                                            |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_pm:::PM_POWER:NODE                                                      |
|            Compute node point in time power                                  |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_pm:::PM_ENERGY:NODE                                                     |
|            Compute node accumulated energy                                   |
|     Units: J                                                                 |
--------------------------------------------------------------------------------
| cray_pm:::PM_POWER_CAP:ACC                                                   |
|            Accelerator power cap                                             |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_pm:::PM_POWER:ACC                                                       |
|            Accelerator point in time power                                   |
|     Units: W                                                                 |
--------------------------------------------------------------------------------
| cray_pm:::PM_ENERGY:ACC                                                      |
|            Accelerator accumulated energy                                    |
|     Units: J                                                                 |
--------------------------------------------------------------------------------
| cray_pm:::PM_FRESHNESS                                                       |
|            Number of times HSS has updated data structure (internal)         |
--------------------------------------------------------------------------------
| cray_pm:::PM_GENERATION                                                      |
|            Number of times a power cap change was made (internal)            |
--------------------------------------------------------------------------------
| cray_pm:::PM_STARTUP                                                         |
|            Timestamp of the last startup (internal)                          |
|     Units: cycles                                                            |
--------------------------------------------------------------------------------
| cray_pm:::PM_SCAN_HZ                                                         |
|            Power counters scan rate (internal)                               |
|     Units: hz                                                                |
--------------------------------------------------------------------------------
| cray_pm:::PM_VERSION                                                         |
|            Version of sysfs directory tree (internal)                        |
===============================================================================
 Native Events in Component: cray_npu
===============================================================================
| cray_npu:::AR_NIC_AMO_PRF_EN                                                 |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_EN:PRF_ORDERED_EN                                  |
|            * Enable AR_NIC_AMO_PRF_STALL_DURATION_ORDERED                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_EN:PRF_FULL_EN                                     |
|            * Enable AR_NIC_AMO_PRF_STALL_DURATION_FULL                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_EN:PRF_FLUSH_EN                                    |
|            * Enable AR_NIC_AMO_PRF_STALL_DURATION_FLUSH                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_EN:PRF_MATCH_EN                                    |
|            * Enable AR_NIC_AMO_PRF_STALL_DURATION_MATCH                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_STALL_DURATION_MATCH                               |
|            Maximum duration of stall (match)                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_STALL_DURATION_FLUSH                               |
|            Maximum duration of stall (flush)                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_STALL_DURATION_FULL                                |
|            Maximum duration of stall (full)                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_AMO_PRF_STALL_DURATION_ORDERED                             |
|            Maximum duration of stall (ordered)                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_BTE_PRF_BYTES_0                                            |
|            Current count of total number of bytes transmitted by BTE channel |
|            0                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_BTE_PRF_BYTES_1                                            |
|            Current count of total number of bytes transmitted by BTE channel |
|            1                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_BTE_PRF_BYTES_2                                            |
|            Current count of total number of bytes transmitted by BTE channel |
|            2                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_BTE_PRF_BYTES_3                                            |
|            Current count of total number of bytes transmitted by BTE channel |
|            3                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_PRF_EVENT_CNTR_CTRL:DISABLE_AUTO_UPDATE             |
|            Writing a 1 disables the auto-updating of the performance counter |
|            RAMs, turns off widget                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_PRF_EVENT_CNTR_CTRL:ENABLE                          |
|            Writing a 1 enables performance counters, writing a 0 disables cou|
|            nting and allows all performance counters to be used as scratch   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_PRF_EVENT_CNTR_CTRL:CLEAR                           |
|            Writing a 1 initiates the clear sequence which clears all performa|
|            nce counters except scratch counters, read returns zero           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_PRF_EVENT_CNTR_CTRL:COUNTERS_CLEAR                  |
|            This bit is clear during the clear sequence and becomes set upon t|
|            he completion of the clear sequence                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_PRF_EVENT_CNTR                                      |
|            Event counters                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_CTRL:DISABLE_AUTO_UPDATE                                |
|            Disables the auto-updating of the performance counters, turns off |
|            widget                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_CTRL:ENABLE                                             |
|            Writing a 1 enables performance counters, writing 0 disables count|
|            ing                                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_CTRL:CLEAR                                              |
|            Initiates the clear sequence which clears all performance counters|
|            , read returns zero                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_CTRL:SEL_LM_TRIGGERS                                    |
|            Select logic monitor triggers                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_CTRL:COUNTERS_CLEAR                                     |
|            This bit becomes set upon the completion of the clear sequence    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NPT_PRF_EN                                                 |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NPT_PRF_EN:PRF_STALL_EN                                    |
|            * Enable AR_NIC_NPT_PRF_NL_STALL_DURATION                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NPT_PRF_EN:PRF_FULL_EN                                     |
|            * Enable AR_NIC_NPT_PRF_FULL_DURATION                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NPT_PRF_FULL_DURATION                                      |
|            Full duration                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NPT_PRF_NL_STALL_DURATION                                  |
|            NL stall duration                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NSLM_PRF_EVENT_CNTR_CTRL:DISABLE_AUTO_UPDATE               |
|            Writing a 1 disables the auto-updating of the performance counter |
|            RAMs, turns off widget                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NSLM_PRF_EVENT_CNTR_CTRL:ENABLE                            |
|            Writing a 1 enables performance counters, writing a 0 disables cou|
|            nting and allows all performance counters to be used as scratch   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NSLM_PRF_EVENT_CNTR_CTRL:CLEAR                             |
|            Writing a 1 initiates the clear sequence which clears all performa|
|            nce counters except scratch counters, read returns zero           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NSLM_PRF_EVENT_CNTR_CTRL:COUNTERS_CLEAR                    |
|            This bit is clear during the clear sequence and becomes set upon t|
|            he completion of the clear sequence                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NSLM_PRF_EVENT_CNTR                                        |
|            Event counters                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC0                              |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC1                              |
|            Flit count coming into INQ for VC1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC2                              |
|            Flit count coming into INQ for VC2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC3                              |
|            Flit count coming into INQ for VC3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC4                              |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC5                              |
|            Flit count coming into INQ for VC5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC6                              |
|            Flit count coming into INQ for VC6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_FLIT_VC7                              |
|            Flit count coming into INQ for VC7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC0 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 0 to match the VC field of|
|             the header flit to 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT0_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC1 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 1 to match the VC field of|
|             the header flit to 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT1_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC2 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 2 to match the VC field of|
|             the header flit to 2                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT2_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC3 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 3 to match the VC field of|
|             the header flit to 3                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT3_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC4 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 4 to match the VC field of|
|             the header flit to 4                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT4_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC5 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 5 to match the VC field of|
|             the header flit to 5                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT5_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC6 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 6 to match the VC field of|
|             the header flit to 6                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT6_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                   |
|            When this is set, AR_RTR_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT|
|             is enabled                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR                 |
|            For mode 0 operation, the counter is programmed to count the numbe|
|            r of incoming VC7 packets, this pointer is set to point to the hea|
|            der flit, or 5'h0                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN          |
|            During mode 0 operation, this is set to 7 to match the VC field of|
|             the header flit to 7                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_FLIT7_FILTERING_MASK                           |
|            Mask the bits during the pattern compare in mode 0 and mode 1 oper|
|            ations                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT0_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT1_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT2_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT3_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT4_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT5_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT6_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT              |
|            Counts in one of three modes based on the settings in AR_RTR_INQ_P|
|            RF_FLIT7_FILTERING_SETUP                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT                |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_ROWBUS_STALL_CNT                               |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_ROWBUS_2X_USAGE_CNT                            |
|            Counts the occurrences where both paths of the row-bus are used si|
|            multaneously for delivering flits to the row buffers              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_INQ_PRF_PKT_TO_DEAD_LINK_CNT                           |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_COLBUF_PERF_STALL_RQ:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_COLBUF_PERF_STALL_RQ:COL_BUF_PERF_STALL_RQ             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_0_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_1_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_2_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_3_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_4_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_5_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_6_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_0_7_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_0_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_1_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_2_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_3_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_4_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_5_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_6_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_1_7_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_0_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_1_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_2_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_3_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_4_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_5_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_6_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_2_7_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_0_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_1_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_2_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_3_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_4_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_5_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_6_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_3_7_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_0_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_1_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_2_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_3_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_4_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_5_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_6_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_COLBUF_PERF_STALL_RS:VC_PTR                            |
|            Pointer indicating which VC should be monitored                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_4_7_COLBUF_PERF_STALL_RS:COL_BUF_PERF_STALL_RS             |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_1                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_1:BIN3_MIN                            |
|            * Boundary between bin 2 and bin 3                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_1:BIN2_MIN                            |
|            * Boundary between bin 1 and bin 2                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_1:BIN1_MIN                            |
|            * Boundary between bin 0 and bin 1                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_2                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_2:BIN7_MIN                            |
|            * Boundary between bin 6 and bin 7                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_2:BIN6_MIN                            |
|            * Boundary between bin 5 and bin 6                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_2:BIN5_MIN                            |
|            * Boundary between bin 4 and bin 5                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_NET_RSP_HIST_2:BIN4_MIN                            |
|            * Boundary between bin 3 and bin 4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:ADDR_63_36                          |
|            * Address[63:36]. Corresponds to bits 63:36 of an SSID-to-ORB Requ|
|            est Header Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:P0                                  |
|            * Parity Bit 0. Corresponds to bit 35 of an SSID-to-ORB Request He|
|            ader Flit                                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:NTT                                 |
|            * Node Translation Table Enable. Corresponds to bit 34 of an SSID-|
|            to-ORB Request Header Flit                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:RESERVED_33_28                      |
|            * Reserved[33:28]. Corresponds to bits 33:28 of an SSID-to-ORB Req|
|            uest Header Flit                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:PKT_SRC                             |
|            * Packet Source. Corresponds to bits 27:26 of an SSID-to-ORB Reque|
|            st Header Flit                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:PTAG                                |
|            * Protection Tag. Corresponds to bits 25:18 of an SSID-to-ORB Requ|
|            est Header Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:DSTID                               |
|            * Destination Core Identifier. Corresponds to bits 17:16 of an SSI|
|            D-to-ORB Request Header Flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_0:DST                                 |
|            * Destination Endpoint. Corresponds to bits 15:0 of an SSID-to-ORB|
|             Request Header Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:RESERVED_127_125                    |
|            * Reserved[127:125]. Corresponds to bits 127:125 of an SSID-to-ORB|
|             Request Header Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:SSID                                |
|            * Synchronization Sequence Identifier. Corresponds to bits 124:116|
|             of an SSID-to-ORB Request Header Flit                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:ADDR_115_112                        |
|            * Address[115:112]. Corresponds to bits 115:112 of an SSID-to-ORB |
|            Request Header Flit                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:CNT_BM                              |
|            * Count/Byte-mask. Corresponds to bits 111:108 of an SSID-to-ORB R|
|            equest Header Flit                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:P2                                  |
|            * Parity Bit 2. Corresponds to bit 107 of an SSID-to-ORB Request H|
|            eader Flit                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:RC0                                 |
|            * Routing Control Bit 0. Corresponds to bit 106 of an SSID-to-ORB |
|            Request Header Flit                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:RESERVED_105_94                     |
|            * Reserved[105:94]. Corresponds to bits 105:94 of an SSID-to-ORB R|
|            equest Header Flit                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:MDH                                 |
|            * Memory Domain Handle. Corresponds to bits 93:82 of an SSID-to-OR|
|            B Request Header Flit                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:RC2                                 |
|            * Routing Control Bit 2. Corresponds to bit 81 of an SSID-to-ORB R|
|            equest Header Flit                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:REQCMD                              |
|            * Request Command. Corresponds to bits 80:72 of an SSID-to-ORB Req|
|            uest Header Flit                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:P1                                  |
|            * Parity Bit 1. Corresponds to bit 71 of an SSID-to-ORB Request He|
|            ader Flit                                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:UV                                  |
|            * Upper Valid. Corresponds to bit 70 of an SSID-to-ORB Request Hea|
|            der Flit                                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_1:ADDR_69_64                          |
|            * Address[69:64]. Corresponds to bits 69:64 of an SSID-to-ORB Requ|
|            est Header Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_2                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_2:EN                                  |
|            * Enable performance tracking comparisons for SSID-to-ORB Local Ad|
|            dress Flit or Request Header Flit                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_2:P3                                  |
|            * Parity Bit 3. Corresponds to bit 143 of an SSID-to-ORB Request H|
|            eader Flit                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_2:RC1                                 |
|            * Routing Control Bit 1. Corresponds to bit 142 of an SSID-to-ORB |
|            Request Header Flit                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_2:LSTATUS                             |
|            * Local Status. Corresponds to bits 141:136 of an SSID-to-ORB Requ|
|            est Header Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_2:RESERVED_135_128                    |
|            * Reserved[135:128]. Corresponds to bits 135:128 of an SSID-to-ORB|
|             Request Header Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:ADDR_63_36_MSK                      |
|            * Address[63:36] Mask. Corresponds to bits 63:36 of an SSID-to-ORB|
|             Request Header Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:P0_MSK                              |
|            * Parity Bit 0 Mask. Corresponds to bit 35 of an SSID-to-ORB Reque|
|            st Header Flit                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:NTT_MSK                             |
|            * Node Translation Table Enable Mask. Corresponds to bit 34 of an |
|            SSID-to-ORB Request Header Flit                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:RESERVED_33_28                      |
|            * Reserved[33:28] Mask. Corresponds to bits 33:28 of an SSID-to-OR|
|            B Request Header Flit                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:PKT_SRC_MSK                         |
|            * Packet Source Mask. Corresponds to bits 27:26 of an SSID-to-ORB |
|            Request Header Flit                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:PTAG_MSK                            |
|            * Protection Tag Mask. Corresponds to bits 25:18 of an SSID-to-ORB|
|             Request Header Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:DSTID_MSK                           |
|            * Destination Core Identifier Mask. Corresponds to bits 17:16 of a|
|            n SSID-to-ORB Request Header Flit                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_0:DST                                 |
|            * Destination Endpoint Mask. Corresponds to bits 15:0 of an SSID-t|
|            o-ORB Request Header Flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:RESERVED_127_125                    |
|            * Reserved[127:125] Mask. Corresponds to bits 127:125 of an SSID-t|
|            o-ORB Request Header Flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:SSID_MSK                            |
|            * Synchronization Sequence Identifier Mask. Corresponds to bits 12|
|            4:116 of an SSID-to-ORB Request Header Flit                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:ADDR_115_112_MSK                    |
|            * Address[115:112] Mask. Corresponds to bits 115:112 of an SSID-to|
|            -ORB Request Header Flit                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:CNT_BM_MSK                          |
|            * Count/Byte-mask Mask. Corresponds to bits 111:108 of an SSID-to-|
|            ORB Request Header Flit                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:P2_MSK                              |
|            * Parity Bit 2 Mask. Corresponds to bit 107 of an SSID-to-ORB Requ|
|            est Header Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:RC0_MSK                             |
|            * Routing Control Bit 0 Mask. Corresponds to bit 106 of an SSID-to|
|            -ORB Request Header Flit                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:RESERVED_105_94                     |
|            * Reserved[105:94] Mask. Corresponds to bits 105:94 of an SSID-to-|
|            ORB Request Header Flit                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:MDH_MSK                             |
|            * Memory Domain Handle Mask. Corresponds to bits 93:82 of an SSID-|
|            to-ORB Request Header Flit                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:RC2_MSK                             |
|            * Routing Control Bit 2 Mask. Corresponds to bit 81 of an SSID-to-|
|            ORB Request Header Flit                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:REQCMD_MSK                          |
|            * Request Command Mask. Corresponds to bits 80:72 of an SSID-to-OR|
|            B Request Header Flit                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:P1_MSK                              |
|            * Parity Bit 1 Mask. Corresponds to bit 71 of an SSID-to-ORB Reque|
|            st Header Flit                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:UV_MSK                              |
|            * Upper Valid Mask. Corresponds to bit 70 of an SSID-to-ORB Reques|
|            t Header Flit                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_1:ADDR_69_64_MSK                      |
|            * Address[69:64] Mask. Corresponds to bits 69:64 of an SSID-to-ORB|
|             Request Header Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_2                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_2:P3_MSK                              |
|            * Parity Bit 3 Mask. Corresponds to bit 143 of an SSID-to-ORB Requ|
|            est Header Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_2:RC1_MSK                             |
|            * Routing Control Bit 1 Mask. Corresponds to bit 142 HRO CWA of an|
|             SSID-to-ORB Request Header Flit                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_2:LSTATUS_MSK                         |
|            * Local Status Mask. Corresponds to bits 141:136 of HRO CWA an SSI|
|            D-to-ORB Request Header Flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_2:RESERVED_135_128                    |
|            * Reserved[135:128] Mask. Corresponds to bits HRO CWA 135:128 of a|
|            n SSID-to-ORB Request Header Flit                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_3                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_3:LADDR_63_36                         |
|            * Local Address[63:36]. Corresponds to bits 63:36 of an SSID-to-OR|
|            B Local Address Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_3:RESERVED_35_26                      |
|            * Reserved[35:26]. Corresponds to bits 35:26 of an HRO CWA SSID-to|
|            -ORB Local Address Flit                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_3:LPTAG                               |
|            * Local Protection Tag. Corresponds to bits 25:18 of an HRO CWA SS|
|            ID-to-ORB Local Address Flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_3:RESERVED_17_0                       |
|            * Reserved[17:0]. Corresponds to bits 17:0 of an HRO CWA SSID-to-O|
|            RB Request Header Flit                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:RESERVED_127_112                    |
|            * Reserved[127:112]. Corresponds to bits 127:112 of an SSID-to-ORB|
|             Local Address Flit                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:LCNT                                |
|            * Local 32-bit Word Count “minus one”. Corresponds to HRO CWA |
|            bits 111:108 of an SSID-to-ORB Local Address Flit                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:RESERVED_107                        |
|            * Reserved[107]. Corresponds to bit 107 of an HRO CWA SSID-to-ORB |
|            Local Address Flit                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:FR                                  |
|            * Flagged Response. Corresponds to bit 106 of an HRO CWA SSID-to-O|
|            RB Local Address Flit                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:LADDR_105_94                        |
|            * Local Address[105:94]. Corresponds to bits 105:94 of an HRO CWA |
|            SSID-to-ORB Local Address Flit                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:LMDH                                |
|            * Local Memory Domain Handle. Corresponds to bits HRO CWA 93:82 of|
|             an SSID-to-ORB Local Address Flit                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:RESERVED_81_72                      |
|            * Reserved[81:72]. Corresponds to bits 81:72 of an SSID-to-ORB Loc|
|            al Address Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_4:ECC0                                |
|            * Error Correction Code 0. Corresponds to bits 71:64 of an SSID-to|
|            -ORB Local Address Flit                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_5                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_5:EN                                  |
|            * Enable performance tracking comparisons for SSID-to-ORB Local Ad|
|            dress Flit or Request Header Flit                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_5:ECC1                                |
|            * Error Correction Code 1. Corresponds to bits 143:136 of an SSID-|
|            to-ORB Local Address Flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_5:LWC                                 |
|            * Write Combine. Corresponds to bit 135 of and HRO CWA SSID-to-ORB|
|             Local Address Flit                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_COMP_5:RESERVED_134_128                    |
|            * Reserved[134:128]. Corresponds to bits 134:128 of an HRO CWA SSI|
|            D-to-ORB Local Address Flit                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_3                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_3:LADDR_63_36_MSK                     |
|            * Local Address[63:36] Mask. Corresponds to bits 63:36 of an SSID-|
|            to-ORB Local Address Flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_3:RESERVED_35_26                      |
|            * Reserved[35:26] Mask. Corresponds to bits 35:26 of an HRO F CWA |
|            SSID-to-ORB Local Address Flit                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_3:LPTAG_MSK                           |
|            * Local Protection Tag Mask. Corresponds to bits 25:18 of HRO CWA |
|            an SSID-to-ORB Local Address Flit                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_3:RESERVED_17_0                       |
|            * Reserved[17:0] Mask. Corresponds to bits 17:0 of an HRO FFF CWA |
|            SSID-to-ORB Request Header Flit                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:RESERVED_127_112                    |
|            * Reserved[127:112] Mask. Corresponds to bits 127:112 of an SSID-t|
|            o-ORB Local Address Flit                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:LCNT_MSK                            |
|            * Local 32-bit Word Count “minus one” Mask. Corresponds to bit|
|            s 111:108 of an SSID-to-ORB Local Address Flit                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:RESERVED_107                        |
|            * Reserved[107] Mask. Corresponds to bit 107 of an SSID-to-ORB Loc|
|            al Address Flit                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:FR_MSK                              |
|            * Flagged Response Mask. Corresponds to bit 106 of an SSID-to-ORB |
|            Local Address Flit                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:LADDR_105_94_MSK                    |
|            * Local Address[105:94] Mask. Corresponds to bits 105:94 of an SSI|
|            D-to-ORB Local Address Flit                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:LMDH_MSK                            |
|            * Local Memory Domain Handle Mask. Corresponds to bits 93:82 of an|
|             SSID-to-ORB Local Address Flit                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:RESERVED_81_72                      |
|            * Reserved[81:72] Mask. Corresponds to bits 81:72 of an SSID-to-OR|
|            B Local Address Flit                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_4:ECC0_MSK                            |
|            * Error Correction Code 0 Mask. Corresponds to bits 71:64 of an SS|
|            ID-to-ORB Local Address Flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_5                                     |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_5:ECC1_MSK                            |
|            * Error Correction Code 1 Mask. Corresponds to bits 143:136 of an |
|            SSID-to-ORB Local Address Flit                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_5:LWC_MSK                             |
|            * Write Combine. Corresponds to bit 135 of an SSID-to-ORB Local Ad|
|            dress Flit                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_CFG_PRF_TRK_MASK_5:RESERVED_134_128                    |
|            * Reserved[134:128] Mask. Corresponds to bits 134:128 of an SSID-t|
|            o-ORB Local Address Flit                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_TRACK_1:MAX_RSP_TIME                       |
|            Tracks the maximum response time for an outstanding request to the|
|             Aries Network                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_TRACK_1:MIN_RSP_TIME                       |
|            Tracks the minimum response time for an outstanding request to the|
|             Aries Network                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_TRACK_2                                    |
|            Tracks the sum of all response times for outstanding requests to t|
|            he Aries Network                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN01:BIN1_COUNT                      |
|            Bin 1 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN01:BIN0_COUNT                      |
|            Bin 0 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN23:BIN3_COUNT                      |
|            Bin 3 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN23:BIN2_COUNT                      |
|            Bin 2 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN45:BIN5_COUNT                      |
|            Bin 5 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN45:BIN4_COUNT                      |
|            Bin 4 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN67:BIN7_COUNT                      |
|            Bin 7 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_NET_RSP_HIST_BIN67:BIN6_COUNT                      |
|            Bin 6 count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_REQ_BYTES_SENT                                     |
|            Count of the number of bytes sent to the network                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_RSP_BYTES_RCVD                                     |
|            Count of the number of bytes received from the network            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_STALL_DURATION_EN                                  |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_STALL_DURATION_EN:ENABLE_PKTID                     |
|            * Set to enable AR_NIC_ORB_PRF_REQ_PKTID_STALL_DURATION           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_STALL_DURATION_EN:ENABLE_CRDTS                     |
|            * Set to enable AR_NIC_ORB_PRF_REQ_CRDTS_STALL_DURATION           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_REQ_PKTID_STALL_DURATION                           |
|            Duration of stalled request due to lack of packet identifiers     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_ORB_PRF_REQ_CRDTS_STALL_DURATION                           |
|            Duration of stalled request due to lack of ORB-to-NL credits      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_EN                                                |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_EN:PRF_VC2_EN                                     |
|            * Enable register  PARB Performance Register VC2 Stall Duration   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_EN:PRF_VC1_EN                                     |
|            * Enable register  PARB Performance Register VC1 Stall Duration   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_EN:PRF_VC0_EN                                     |
|            * Enable register  PARB Performance Register VC0 Stall Duration   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_STALL_DURATION_VC0                                |
|            VC 0 Stall duration                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_STALL_DURATION_VC1                                |
|            VC 1 Stall duration                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_PARB_PRF_STALL_DURATION_VC2                                |
|            VC 2 Stall duration                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_EVENT_CNTR_CTRL:DISABLE_AUTO_UPDATE                      |
|            Disables the auto-updating of the performance counters, turns off |
|            widget                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_EVENT_CNTR_CTRL:ENABLE                                   |
|            Writing a 1 enables performance counters, writing 0 disables count|
|            ing                                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_EVENT_CNTR_CTRL:CLEAR                                    |
|            Initiates the clear sequence which clears all performance counters|
|            , read returns zero                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_EVENT_CNTR_CTRL:COUNTERS_CLEAR                           |
|            This bit becomes set upon the completion of the clear sequence    |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_PCLK_EVENT_CNTR_CTRL:DISABLE_AUTO_UPDATE                 |
|            Disables the auto-updating of the performance counters, turns off |
|            widget                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_PCLK_EVENT_CNTR_CTRL:ENABLE                              |
|            Writing a 1 enables performance counters, writing 0 disables count|
|            ing                                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_PCLK_EVENT_CNTR_CTRL:CLEAR                               |
|            Initiates the clear sequence which clears all performance counters|
|            , read returns zero                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PM_PCLK_EVENT_CNTR_CTRL:COUNTERS_CLEAR                      |
|            This bit becomes set upon the completion of the clear sequence    |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_FLIT_VC0                           |
|            Flit count coming into INQ for VC0                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_FLIT_VC4                           |
|            Flit count coming into INQ for VC4                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT0_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_NQ_INCOMING_PKT_VC0_FILTER_FLIT0_CNT c|
|            ounts on the number of matching flits based on this setup register|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT0_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT0_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT0_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT1_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT1_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT1_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT1_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT2_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT2_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT2_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT2_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT3_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT3_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT3_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT3_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT4_FILTERING_SETUP:ENABLE                |
|            When this is set, AR_RTR_PT_INQ_INCOMING_PKT_VC4_FILTER_FLIT4_CNT |
|            counts on the number of matching flits based on this setup registe|
|            r                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT4_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT4_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT4_FILTERING_MASK                        |
|            Mask the bits during pattern compare                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT5_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT5_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT5_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT5_FILTERING_MASK                        |
|            Mask the bits during the pattern compare                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT6_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT6_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT6_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT6_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT7_FILTERING_SETUP:ENABLE                |
|            Enable this compare                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT7_FILTERING_SETUP:FLIT_PTR              |
|            Pointer indicating which flit in the packet should be compared aga|
|            inst this signature                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT7_FILTERING_SETUP:COMPARE_PATTERN       |
|            Compare pattern with the flit specified by FLIT_PTR               |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_FLIT7_FILTERING_MASK                        |
|            Mask the bits during the patter compare                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC0_FILTER_FLIT0_CNT           |
|            Counts the number of incoming packets for VC0 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT0_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC1_FILTER_FLIT1_CNT           |
|            Counts the number of incoming packets for VC1 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT1_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC2_FILTER_FLIT2_CNT           |
|            Counts the number of incoming packets for VC2 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT2_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC3_FILTER_FLIT3_CNT           |
|            Counts the number of incoming packets for VC3 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT3_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC4_FILTER_FLIT4_CNT           |
|            Counts the number of incoming packets for VC4 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT4_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC5_FILTER_FLIT5_CNT           |
|            Counts the number of incoming packets for VC5 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT5_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC6_FILTER_FLIT6_CNT           |
|            Counts the number of incoming packets for VC6 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT6_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_INCOMING_PKT_VC7_FILTER_FLIT7_CNT           |
|            Counts the number of incoming packets for VC7 or counts the incomi|
|            ng flits that match AR_RTR_PT_INQ_PRF_FLIT7_FILTERING_SETUP       |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_MATCH_FLIT_3_TO_0_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 3 to 0                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_MATCH_FLIT_7_TO_4_FILTERING_CNT             |
|            Increments when an incoming flit matches flit filtering setup regi|
|            sters 7 to 4                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_REQ_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_RSP_ROWBUS_STALL_CNT                        |
|            Counts the occurrences when a row bus is not being used even when |
|            valid flits are sitting at the front of the OFIFOs but cannot be s|
|            ent to the row buffers due to resource conflict                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_ROWBUS_2X_USAGE_CNT                         |
|            Counts the occurrences where both paths are used simultaneously fo|
|            r delivering flits to the row buffers                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_INQ_PRF_PKT_TO_DEAD_LINK_CNT                        |
|            Counts the occurrences where packets are being routed toward a dea|
|            d link                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_COLBUF_PERF_STALL_RQ                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_0_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_1_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_2_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_3_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_4_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_5_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_6_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_RTR_PT_5_7_COLBUF_PERF_STALL_RS                                |
|            The number of Lclks a valid request is stalled because of lack of |
|            credits                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL0                                           |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL0:FLIT_63_0                                 |
|            * Bits [63:0] of the flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL1                                           |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL1:FLIT_127_64                               |
|            * Bits [127:64] of the flit                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL2                                           |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL2:IOMMU_EN                                  |
|            * Enable this performance counter to look at incoming IOMMU reques|
|            ts                                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL2:NL_EN                                     |
|            * Enable this performance counter to look at incoming NL requests |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL2:HDR                                       |
|            * 1 = Flit type is header                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL2:TAIL                                      |
|            * 1 = Flit is a tail flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_VAL2:FLIT_143_128                              |
|            * Bits [143:128] of the flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK0                                          |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK0:FLIT_63_0                                |
|            * Bits [63:0] of the flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK1                                          |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK1:FLIT_127_64                              |
|            * Bits [127:64] of the flit                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK2                                          |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK2:HDR                                      |
|            * Flit type (header/payload) To ensure atomicity, disable the coun|
|            ter (IOMMU_EN and NL_EN) before modifying the configuration       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK2:TAIL                                     |
|            * Flit is a tail flit                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_MASK2:FLIT_143_128                             |
|            * Bits [143:128] of the flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL0                                           |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL0:FLIT_63_0                                 |
|            * Bits [63:0] of the flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL1                                           |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL1:FLIT_127_64                               |
|            * Bits [127:64] of the flit                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL2                                           |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL2:EN                                        |
|            * Enable this performance counter                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL2:HDR                                       |
|            * 1 = Flit type is header                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL2:TAIL                                      |
|            * 1 = Flit is a tail flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_VAL2:FLIT_143_128                              |
|            * Bits [143:128] of the flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK0                                          |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK0:FLIT_63_0                                |
|            * Bits [63:0] of the flit                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK1                                          |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK1:FLIT_127_64                              |
|            * Bits [127:64] of the flit                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK2                                          |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK2:HDR                                      |
|            * Flit type (header/payload) To ensure atomicity, disable the coun|
|            ter (EN) before modifying the configuration                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK2:TAIL                                     |
|            * Flit is a tail flit                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_MASK2:FLIT_143_128                             |
|            * Bits [143:128] of the flit                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_EN                                                 |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_EN:PRF_RSP_DURATION_EN                             |
|            * Enable register AR_NIC_RAT_PRF_RSP_STALL_DURATION               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_EN:PRF_REQ_DURATION_EN                             |
|            * Enable register AR_NIC_RAT_PRF_REQ_STALL_DURATION               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_STALL_DURATION                                 |
|            Request stall duration                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_RSP_STALL_DURATION                                 |
|            Response stall duration                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RAT_PRF_REQ_BYTES_RCVD                                     |
|            The number of payload bytes received on the request channel       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_PRF_EVENT_CNTR_CTRL:DISABLE_AUTO_UPDATE             |
|            Writing a 1 disables the auto-updating of the performance counter |
|            RAMs, turns off widget                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_PRF_EVENT_CNTR_CTRL:ENABLE                          |
|            Writing a 1 enables performance counters, writing a 0 disables cou|
|            nting and allows all performance counters to be used as scratch   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_PRF_EVENT_CNTR_CTRL:CLEAR                           |
|            Writing a 1 initiates the clear sequence which clears all performa|
|            nce counters except scratch counters, read returns zero           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_PRF_EVENT_CNTR_CTRL:COUNTERS_CLEAR                  |
|            This bit is clear during the clear sequence and becomes set upon t|
|            he completion of the clear sequence                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_PRF_EVENT_CNTR                                      |
|            Event counters                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RMT_PRF_PUT_BYTES_RX                                       |
|            Count of PUT bytes received                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RMT_PRF_SEND_BYTES_RX                                      |
|            Count of BTE_Send bytes received                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PRF_EVENT_CNTR_CTRL:DISABLE_AUTO_UPDATE             |
|            Writing a 1 disables the auto-updating of the performance counter |
|            RAMs, turns off widget                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PRF_EVENT_CNTR_CTRL:ENABLE                          |
|            Writing a 1 enables performance counters, writing a 0 disables cou|
|            nting and allows all performance counters to be used as scratch   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PRF_EVENT_CNTR_CTRL:CLEAR                           |
|            Writing a 1 initiates the clear sequence which clears all performa|
|            nce counters except scratch counters, read returns zero           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PRF_EVENT_CNTR_CTRL:COUNTERS_CLEAR                  |
|            This bit is clear during the clear sequence and becomes set upon t|
|            he completion of the clear sequence                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PRF_EVENT_CNTR                                      |
|            Event counters                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_SSID_CFG_EVENT_CNTR_FILTER                                 |
|            * Set to zero to configure default values                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_SSID_CFG_EVENT_CNTR_FILTER:CHANNEL                         |
|            * The ID of the FMA descriptor, BTE channel, or virtual CE for whi|
|            ch counting is enabled                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_SSID_CFG_EVENT_CNTR_FILTER:INITIATOR                       |
|            * Selects whether counting is enabled for a FMA descriptor, a BTE |
|            channel, or a virtual CE                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_SSID_CFG_EVENT_CNTR_FILTER:ALL_CHAN_EN                     |
|            * When set to 1, counting is enabled for all FMA descriptors, BTE |
|            channels, and virtual CEs                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_SSID_PRF_CNTR_SSIDS_IN_USE:MAX_SSIDS_IN_USE                |
|            The maximum number of SSIDs that have been in use simultaneously s|
|            ince this register was last initialized                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_SSID_PRF_CNTR_SSIDS_IN_USE:CUR_SSIDS_IN_USE                |
|            The number of SSIDs currently in use across all Request Channels  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_WC_PRF_RSP_BYTES_RCVD                                      |
|            Byte Count                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_WC_PRF_BUFS_VLD                                            |
|            Valid Buffers Count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_TO_NIC_0                                    |
|            Requests from PTILE 0 to NIC 0                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_TO_NIC_1                                    |
|            Requests from PTILE 0 to NIC 1                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 0 requests are stalled to NIC 0                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 0 requests are stalled to NIC 1                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 0                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 0                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_TO_NIC_0                                    |
|            Requests from PTILE 1 to NIC 0                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_TO_NIC_1                                    |
|            Requests from PTILE 1 to NIC 1                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 1 requests are stalled to NIC 0                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 1 requests are stalled to NIC 1                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 1                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 1                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_TO_NIC_0                                    |
|            Requests from PTILE 2 to NIC 0                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_TO_NIC_1                                    |
|            Requests from PTILE 2 to NIC 1                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 2 requests are stalled to NIC 0                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 2 requests are stalled to NIC 1                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 2                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 2                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_TO_NIC_0                                    |
|            Requests from PTILE 3 to NIC 0                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_TO_NIC_1                                    |
|            Requests from PTILE 3 to NIC 1                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 3 requests are stalled to NIC 0                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 3 requests are stalled to NIC 1                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 3                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 3                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_TO_NIC_2                                    |
|            Requests from PTILE 4 to NIC 2                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_TO_NIC_3                                    |
|            Requests from PTILE 4 to NIC 3                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 4 requests are stalled to NIC 2                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 4 requests are stalled to NIC 3                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 4                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 4                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_TO_NIC_2                                    |
|            Requests from PTILE 5 to NIC 2                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_TO_NIC_3                                    |
|            Requests from PTILE 5 to NIC 3                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 5 requests are stalled to NIC 2                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 5 requests are stalled to NIC 3                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 5                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 5                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_TO_NIC_2                                    |
|            Requests from PTILE 6 to NIC 2                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_TO_NIC_3                                    |
|            Requests from PTILE 6 to NIC 3                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 6 requests are stalled to NIC 2                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 6 requests are stalled to NIC 3                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 6                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 6                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_TO_NIC_2                                    |
|            Requests from PTILE 7 to NIC 2                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_TO_NIC_3                                    |
|            Requests from PTILE 7 to NIC 3                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 7 requests are stalled to NIC 2                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 7 requests are stalled to NIC 3                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_IN_NW_FLITS                                 |
|            NW request flits received from PTILE 7                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_IN_NW_PKTS                                  |
|            Request packets received from PTILE 7                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_TO_NIC_0                                    |
|            Responses from PTILE 0 to NIC 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_TO_NIC_1                                    |
|            Responses from PTILE 0 to NIC 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 0 responses are stalled to NIC 0               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 0 responses are stalled to NIC 1               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 0                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 0                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_TO_NIC_0                                    |
|            Responses from PTILE 1 to NIC 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_TO_NIC_1                                    |
|            Responses from PTILE 1 to NIC 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 1 responses are stalled to NIC 0               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 1 responses are stalled to NIC 1               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 1                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 1                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_TO_NIC_0                                    |
|            Responses from PTILE 2 to NIC 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_TO_NIC_1                                    |
|            Responses from PTILE 2 to NIC 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 2 responses are stalled to NIC 0               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 2 responses are stalled to NIC 1               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 2                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 2                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_TO_NIC_0                                    |
|            Responses from PTILE 3 to NIC 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_TO_NIC_1                                    |
|            Responses from PTILE 3 to NIC 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_TO_NIC_0_STALLED                            |
|            Clock cycles PTILE 3 responses are stalled to NIC 0               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_TO_NIC_1_STALLED                            |
|            Clock cycles PTILE 3 responses are stalled to NIC 1               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 3                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 3                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_TO_NIC_2                                    |
|            Responses from PTILE 4 to NIC 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_TO_NIC_3                                    |
|            Responses from PTILE 4 to NIC 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 4 responses are stalled to NIC 2               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 4 responses are stalled to NIC 3               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 4                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 4                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_TO_NIC_2                                    |
|            Responses from PTILE 5 to NIC 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_TO_NIC_3                                    |
|            Responses from PTILE 5 to NIC 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 5 responses are stalled to NIC 2               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 5 responses are stalled to NIC 3               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 5                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 5                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_TO_NIC_2                                    |
|            Responses from PTILE 6 to NIC 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_TO_NIC_3                                    |
|            Responses from PTILE 6 to NIC 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 6 responses are stalled to NIC 2               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 6 responses are stalled to NIC 3               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 6                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 6                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_TO_NIC_2                                    |
|            Responses from PTILE 7 to NIC 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_TO_NIC_3                                    |
|            Responses from PTILE 7 to NIC 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_TO_NIC_2_STALLED                            |
|            Clock cycles PTILE 7 responses are stalled to NIC 2               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_TO_NIC_3_STALLED                            |
|            Clock cycles PTILE 7 responses are stalled to NIC 3               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_IN_NW_FLITS                                 |
|            NW response flits received from PTILE 7                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_IN_NW_PKTS                                  |
|            Response packets received from PTILE 7                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_0_FLITS                               |
|            NIC request flits to NIC 0                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_0_PKTS                                |
|            Request packets to NIC 0                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_0_STALLED                             |
|            Clocks all request PTILEs have stalled to NIC 0                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_1_FLITS                               |
|            NIC request flits to NIC 1                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_1_PKTS                                |
|            Request packets to NIC 1                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_1_STALLED                             |
|            Clocks all request PTILEs have stalled to NIC 1                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_2_FLITS                               |
|            NIC request flits to NIC 2                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_2_PKTS                                |
|            Request packets to NIC 2                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_2_STALLED                             |
|            Clocks all request PTILEs have stalled to NIC 2                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_3_FLITS                               |
|            NIC request flits to NIC 3                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_3_PKTS                                |
|            Request packets to NIC 3                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_PTILES_TO_NIC_3_STALLED                             |
|            Clocks all request PTILEs have stalled to NIC 3                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_0_FLITS                               |
|            NIC response flits to NIC 0                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_0_PKTS                                |
|            Response packets to NIC 0                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_0_STALLED                             |
|            Clocks all response PTILEs have stalled to NIC 0                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_1_FLITS                               |
|            NIC response flits to NIC 1                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_1_PKTS                                |
|            Response packets to NIC 1                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_1_STALLED                             |
|            Clocks all response PTILEs have stalled to NIC 1                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_2_FLITS                               |
|            NIC response flits to NIC 2                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_2_PKTS                                |
|            Response packets to NIC 2                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_2_STALLED                             |
|            Clocks all response PTILEs have stalled to NIC 2                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_3_FLITS                               |
|            NIC response flits to NIC 3                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_3_PKTS                                |
|            Response packets to NIC 3                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_PTILES_TO_NIC_3_STALLED                             |
|            Clocks all response PTILEs have stalled to NIC 3                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_0                                    |
|            Requests from NIC 0 to PTILE 0                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_0                                    |
|            Requests from NIC 1 to PTILE 0                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_0_STALLED                            |
|            Clock cycles NIC 0 requests are stalled to PTILE 0                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_0_STALLED                            |
|            Clock cycles NIC 1 requests are stalled to PTILE 0                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 0                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_1                                    |
|            Requests from NIC 0 to PTILE 1                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_1                                    |
|            Requests from NIC 1 to PTILE 1                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_1_STALLED                            |
|            Clock cycles NIC 0 requests are stalled to PTILE 1                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_1_STALLED                            |
|            Clock cycles NIC 1 requests are stalled to PTILE 1                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 1                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_2                                    |
|            Requests from NIC 0 to PTILE 2                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_2                                    |
|            Requests from NIC 1 to PTILE 2                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_2_STALLED                            |
|            Clock cycles NIC 0 requests are stalled to PTILE 2                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_2_STALLED                            |
|            Clock cycles NIC 1 requests are stalled to PTILE 2                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 2                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_3                                    |
|            Requests from NIC 0 to PTILE 3                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_3                                    |
|            Requests from NIC 1 to PTILE 3                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_REQ_TO_PTILE_3_STALLED                            |
|            Clock cycles NIC 0 requests are stalled to PTILE 3                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_REQ_TO_PTILE_3_STALLED                            |
|            Clock cycles NIC 1 requests are stalled to PTILE 3                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 3                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_4                                    |
|            Requests from NIC 2 to PTILE 4                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_4                                    |
|            Requests from NIC 3 to PTILE 4                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_4_STALLED                            |
|            Clock cycles NIC 2 requests are stalled to PTILE 4                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_4_STALLED                            |
|            Clock cycles NIC 3 requests are stalled to PTILE 4                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 4                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 4                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_5                                    |
|            Requests from NIC 2 to PTILE 5                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_5                                    |
|            Requests from NIC 3 to PTILE 5                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_5_STALLED                            |
|            Clock cycles NIC 2 requests are stalled to PTILE 5                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_5_STALLED                            |
|            Clock cycles NIC 3 requests are stalled to PTILE 5                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_OUT_NW_PKTS                                 |
|            NW request flits sent to PTILE 5                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_REQ_OUT_NW_FLITS                                |
|            Request packets sent to PTILE 5                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_6                                    |
|            Requests from NIC 2 to PTILE 6                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_6                                    |
|            Requests from NIC 3 to PTILE 6                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_6_STALLED                            |
|            Clock cycles NIC 2 requests are stalled to PTILE 6                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_6_STALLED                            |
|            Clock cycles NIC 3 requests are stalled to PTILE 6                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 6                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 6                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_7                                    |
|            Requests from NIC 2 to PTILE 7                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_7                                    |
|            Requests from NIC 3 to PTILE 7                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_REQ_TO_PTILE_7_STALLED                            |
|            Clock cycles NIC 2 requests are stalled to PTILE 7                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_REQ_TO_PTILE_7_STALLED                            |
|            Clock cycles NIC 3 requests are stalled to PTILE 7                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_OUT_NW_FLITS                                |
|            NW request flits sent to PTILE 7                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_REQ_OUT_NW_PKTS                                 |
|            Request packets sent to PTILE 7                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_0                                    |
|            Responses from NIC 0 to PTILE 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_0                                    |
|            Responses from NIC 1 to PTILE 0                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_0_STALLED                            |
|            Clock cycles NIC 0 responses are stalled to PTILE 0               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_0_STALLED                            |
|            Clock cycles NIC 1 responses are stalled to PTILE 0               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 0                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_0_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 0                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_1                                    |
|            Responses from NIC 0 to PTILE 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_1                                    |
|            Responses from NIC 1 to PTILE 1                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_1_STALLED                            |
|            Clock cycles NIC 0 responses are stalled to PTILE 1               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_1_STALLED                            |
|            Clock cycles NIC 1 responses are stalled to PTILE 1               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 1                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_1_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 1                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_2                                    |
|            Responses from NIC 0 to PTILE 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_2                                    |
|            Responses from NIC 1 to PTILE 2                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_2_STALLED                            |
|            Clock cycles NIC 0 responses are stalled to PTILE 2               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_2_STALLED                            |
|            Clock cycles NIC 1 responses are stalled to PTILE 2               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 2                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_2_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 2                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_3                                    |
|            Responses from NIC 0 to PTILE 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_3                                    |
|            Responses from NIC 1 to PTILE 3                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_0_RSP_TO_PTILE_3_STALLED                            |
|            Clock cycles NIC 0 responses are stalled to PTILE 3               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_1_RSP_TO_PTILE_3_STALLED                            |
|            Clock cycles NIC 1 responses are stalled to PTILE 3               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 3                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_3_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 3                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_4                                    |
|            Responses from NIC 2 to PTILE 4                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_4                                    |
|            Responses from NIC 3 to PTILE 4                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_4_STALLED                            |
|            Clock cycles NIC 2 responses are stalled to PTILE 4               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_4_STALLED                            |
|            Clock cycles NIC 3 responses are stalled to PTILE 4               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 4                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_4_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 4                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_5                                    |
|            Responses from NIC 2 to PTILE 5                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_5                                    |
|            Responses from NIC 3 to PTILE 5                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_5_STALLED                            |
|            Clock cycles NIC 2 responses are stalled to PTILE 5               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_5_STALLED                            |
|            Clock cycles NIC 3 responses are stalled to PTILE 5               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 5                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_5_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 5                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_6                                    |
|            Responses from NIC 2 to PTILE 6                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_6                                    |
|            Responses from NIC 3 to PTILE 6                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_6_STALLED                            |
|            Clock cycles NIC 2 responses are stalled to PTILE 6               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_6_STALLED                            |
|            Clock cycles NIC 3 responses are stalled to PTILE 6               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 6                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_6_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 6                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_7                                    |
|            Responses from NIC 2 to PTILE 7                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_7                                    |
|            Responses from NIC 3 to PTILE 7                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_2_RSP_TO_PTILE_7_STALLED                            |
|            Clock cycles NIC 2 responses are stalled to PTILE 7               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_NIC_3_RSP_TO_PTILE_7_STALLED                            |
|            Clock cycles NIC 3 responses are stalled to PTILE 7               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_OUT_NW_FLITS                                |
|            NW response flits sent to PTILE 7                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_PTILE_7_RSP_OUT_NW_PKTS                                 |
|            Response packets sent to PTILE 7                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_0_TO_PTILES_FLITS                               |
|            NIC request flits from NIC 0                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_0_TO_PTILES_PKTS                                |
|            Request packets from NIC 0                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_0_TO_PTILES_STALLED                             |
|            CPs requests from NIC 0 have stalled to all PTILEs                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_1_TO_PTILES_FLITS                               |
|            NIC request flits from NIC 1                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_1_TO_PTILES_PKTS                                |
|            Request packets from NIC 1                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_1_TO_PTILES_STALLED                             |
|            CPs requests from NIC 1 have stalled to all PTILEs                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_2_TO_PTILES_FLITS                               |
|            NIC request flits from NIC 2                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_2_TO_PTILES_PKTS                                |
|            Request packets from NIC 2                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_2_TO_PTILES_STALLED                             |
|            CPs requests from NIC 2 have stalled to all PTILEs                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_3_TO_PTILES_FLITS                               |
|            NIC request flits from NIC 3                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_3_TO_PTILES_PKTS                                |
|            Request packets from NIC 3                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_REQ_NIC_3_TO_PTILES_STALLED                             |
|            CPs requests from NIC 3 have stalled to all PTILEs                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_0_TO_PTILES_FLITS                               |
|            NIC response flits from NIC 0                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_0_TO_PTILES_PKTS                                |
|            Response packets from NIC 0                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_0_TO_PTILES_STALLED                             |
|            CPs responses from NIC 0 have stalled to all PTILEs               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_1_TO_PTILES_FLITS                               |
|            NIC response flits from NIC 1                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_1_TO_PTILES_PKTS                                |
|            Response packets from NIC 1                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_1_TO_PTILES_STALLED                             |
|            CPs responses from NIC 1 have stalled to all PTILEs               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_2_TO_PTILES_FLITS                               |
|            NIC response flits from NIC 2                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_2_TO_PTILES_PKTS                                |
|            Response packets from NIC 2                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_2_TO_PTILES_STALLED                             |
|            CPs responses from NIC 2 have stalled to all PTILEs               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_3_TO_PTILES_FLITS                               |
|            NIC response flits from NIC 3                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_3_TO_PTILES_PKTS                                |
|            Response packets from NIC 3                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NL_PRF_RSP_NIC_3_TO_PTILES_STALLED                             |
|            CPs responses from NIC 3 have stalled to all PTILEs               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NETMON_EVENT_CNTR_TRIGGER0                          |
|            TRIGGER 0 count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NETMON_EVENT_CNTR_TRIGGER1                          |
|            TRIGGER 1 count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_RAT_TRANSLATIONS                     |
|            RAT translation count                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_RAT_STALLED                          |
|            RAT stalled count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_RAT_BLOCKED                          |
|            RAT blocked count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_CQ_TRANSLATIONS                      |
|            CQ translation count                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_CQ_STALLED                           |
|            CQ stalled count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_CQ_BLOCKED                           |
|            CQ blocked count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_BTE_TRANSLATIONS                     |
|            BTE translation count                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_BTE_STALLED                          |
|            BTE stalled count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_BTE_BLOCKED                          |
|            BTE blocked count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_PIPELINE_STALLED                     |
|            Translation pipeline stalls                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_MDDT0_SBE                            |
|            SBE’s in MDDT RAM 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_MDDT0_MBE                            |
|            MBE’s in MDDT RAM 0                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_MDDT1_SBE                            |
|            SBE’s in MDDT RAM 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_MDDT1_MBE                            |
|            MBE’s in MDDT RAM 1                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_PTT_SBE                              |
|            SBE’s in PTT RAM                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_NAT_EVENT_CNTR_PTT_MBE                              |
|            MBE’s in PTT RAM                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_REDUCT_SCAT0                          |
|            Channel 0 Reduction/Scatter count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_REDUCT_SCAT1                          |
|            Channel 1 Reduction/Scatter count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_REDUCT_SCAT2                          |
|            Channel 2 Reduction/Scatter count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_REDUCT_SCAT3                          |
|            Channel 3 Reduction/Scatter count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_DFLIT_SBE                             |
|            SBE data flit count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_DFLIT_MBE                             |
|            MBE data flit count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_CONFIG_SBE                            |
|            Config MMR SBE count                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_CONFIG_MBE                            |
|            Config MMR MBE count                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_HEADER_PC                             |
|            Header flit parity error count                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_CE_EVENT_CNTR_BAD_REQS                              |
|            Rejected request count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_ALLOCATIONS                         |
|            Successful SSID allocations across all source blocks (FMA, BTE, CE|
|            )                                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_NO_SSID                             |
|            Out of SSIDs events                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_NO_SSID_DURATN                      |
|            Out of SSIDs duration                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_REQ_STALLED_DURATN                  |
|            Stalled requests duration                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_DSMN_OPTIMAL                        |
|            Optimally completed DSMN transactions                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_DSMN_SUBOPTIMAL                     |
|            Suboptimally completed DSMN transactions                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_BTESEND_SUCCESSFUL                  |
|            Successfully completed BTE_Send transactions                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_BTESEND_UNSUCCESSFUL                |
|            Unsuccessfully completed BTE_Send transactions                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_NO_DEST_NOTIFY                      |
|            Transactions completed without destination notification           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_LATE_FIRST_REQRSP                   |
|            Transactions completed with late response arrival                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_INTENTIONAL_TIMEOUT                 |
|            Transactions completed with an intentional SSID entry timeout     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_LREQ_ERR_HSS                        |
|            Local request errors of interest to HSS                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_LREQ_ERR_OS                         |
|            Local request errors of interest to OS                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_RREQ_HSS                            |
|            Remote request errors of interest to HSS                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_RREQ_OS                             |
|            Remote request errors of interest to OS                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_RSP_HSS                             |
|            Response errors of interest to HSS                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_RSP_OS                              |
|            Response errors of interest to OS                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_STALE_SSID                          |
|            Stale SSID entries count                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_SEQ_ERR_HSS                         |
|            Sequence errors of interest to HSS                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_SEQ_ERR_OS                          |
|            Sequence errors of interest to OS                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_UNEXPTD_RSP                         |
|            Unexpected response                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_MEM_ERR_CORR                        |
|            Correctable memory errors                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_MEM_ERR_UNCORR                      |
|            Uncorrectable memory errors                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_CORRUPT_REQ_HD                      |
|            Request packets with corrupt head flits                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_CORR_REQ_PAYLD_ERR                  |
|            Correctable errors in request packet payload flits                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_UNCORR_REQ_PAYLD_ERR                |
|            Uncorrectable errors in request packet payload flits              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_REQ_LEN_ERR                         |
|            Request packets with incorrect length                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_CORRUPT_RSP                         |
|            Corrupt response head flits                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_SSID_EVENT_CNTR_BYPASSED_REQ                        |
|            Good request packets not forwarded toward network                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_REQ_FLITS                            |
|            ORB request flits event count                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_REQ_PKTS                             |
|            ORB request packets event count                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_REQ_STALLED                          |
|            ORB request stalled event count                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_NET_TRACK                        |
|            ORB response packets tracked count                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_FLITS                            |
|            ORB response flits event count                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_PKTS                             |
|            ORB response packets event count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_STALLED                          |
|            ORB response stalled event count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_BLOCKED                          |
|            ORB response blocked event count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_BLOCKED_PKT_GEN                  |
|            ORB response blocked due to GET packet generation event count     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_ORD_RAM_READ                         |
|            ORB response packets read from ORD event count                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_NTT_SBE                              |
|            ORB NTT SBE event count                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_NTT_MBE                              |
|            ORB NTT MBE event count                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_PTT_SBE                              |
|            ORB PTT SBE event count                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_PTT_MBE                              |
|            ORB PTT MBE event count                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_REQ_FIFO_SBE                         |
|            ORB request FIFO SBE event count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_REQ_FIFO_MBE                         |
|            ORB request FIFO MBE event count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_REQ_FIFO_PE                          |
|            ORB request FIFO PE event count                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_FIFO_SBE                         |
|            ORB response FIFO SBE event count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_FIFO_MBE                         |
|            ORB response FIFO MBE count                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_FIFO_PE                          |
|            ORB response FIFO PE event count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_RSP_FIFO_SPKT                        |
|            Response FIFO super packet count                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_ORD_SBE                              |
|            ORB outstanding request data RAM SBE event count                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_ORD_MBE                              |
|            ORB outstanding request data RAM MBE event count                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_SCRUB_CNT                            |
|            ORB Scrub entry count                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_NO_ENTRY                             |
|            No entry in ORD event count                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_CMD_MISMATCH                         |
|            Command mismatch event count                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_ILLEGAL_PKTID                        |
|            Illegal packet ID in response count                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_ORB_EVENT_CNTR_ILLEGAL_LSTATUS                      |
|            Illegal local status in response count                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_NL_PKTS                              |
|            NL packet count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_NL_FLITS                             |
|            NL flit count                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_NL_BLOCKED                           |
|            NL blocked count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_IOMMU_PKTS                           |
|            IOMMU packet count                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_IOMMU_FLITS                          |
|            IOMMU flit count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_IOMMU_BLOCKED                        |
|            IOMMU blocked count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_STALLED                          |
|            Request channel (NL or IOMMU) stalled count                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_ORB_PKTS                             |
|            ORB packet count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_ORB_FLITS                            |
|            ORB flit count                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_STALLED                          |
|            ResponseChannel (ORB) stalled count                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_PARITY_INPUT                     |
|            Parity error in request packet input (excludes IOMMU)             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_PARITY_INPUT                     |
|            Parity error in response packet input                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_PARITY_OUTPUT                    |
|            Parity error in request packet output (includes IOMMU)            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_PARITY_OUTPUT                    |
|            Parity error in response packet output                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_XLAT_ERR                         |
|            Translation error in request (detected in output processing)      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_PAYLD_ERR                        |
|            Payload error in request (detected in output processing)          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_XLAT_ERR                         |
|            Translation error in response (detected in output processing)     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_PAYLD_ERR                        |
|            Payload error in response (detected in output processing)         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_IOMMU_PARITY_INPUT                   |
|            Parity error in IOMMU request packet input                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_IOMMU_DROP_INPUT                     |
|            IOMMU request was dropped during input processing (e.g. invalid co|
|            mmand)                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_IOMMU_PAYLD_ERR                      |
|            Payload error in IOMMU request (detected in output processing)    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_MALFORMED                        |
|            Malformed request packet (detected in input processing)           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_INV_CMD                          |
|            Invalid command in request (detected in input processing)         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_MALFORMED                        |
|            Malformed response packet (detected in input processing)          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_INV_CMD                          |
|            Invalid command in response (detected in input processing)        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_REQ_FLIT                             |
|            Configurable performance counter, request channel (includes IOMMU)|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_RAT_EVENT_CNTR_RSP_FLIT                             |
|            Configurable performance counter, response channel                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_CE_FLITS                            |
|            CE flit count                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_CE_PKTS                             |
|            CE packet count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_CE_BLOCKED                          |
|            CE blocked count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_BTE_FLITS                           |
|            BTE flit count                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_BTE_PKTS                            |
|            BTE packet count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_BTE_BLOCKED                         |
|            BTE blocked count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_DLA_FLITS                           |
|            DLA flit count                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_DLA_PKTS                            |
|            DLA packet count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_DLA_BLOCKED                         |
|            DLA blocked count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_SSID_FLITS                          |
|            SSID flit count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_SSID_PKTS                           |
|            SSID packet count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_NETMON_TARB_EVENT_CNTR_SSID_STALLED                        |
|            SSID stalled count                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_REQMON_EVENT_CNTR_TRIGGER0                          |
|            TRIGGER 0 count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_REQMON_EVENT_CNTR_TRIGGER1                          |
|            TRIGGER 1 count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NET_PKT0                             |
|            BTE Channel 0 network packets                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NET_PKT1                             |
|            BTE Channel 1 network packets                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NET_PKT2                             |
|            BTE Channel 2 network packets                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NET_PKT3                             |
|            BTE Channel 3 network packets                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_DESC0                                |
|            BTE Channel 0 TX descriptors processed                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_DESC1                                |
|            BTE Channel 1 TX descriptors processed                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_DESC2                                |
|            BTE Channel 2 TX descriptors processed                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_DESC3                                |
|            BTE Channel 3 TX descriptors processed                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PROC_TIME0                           |
|            BTE Channel 0 descriptor processing time                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PROC_TIME1                           |
|            BTE Channel 1 descriptor processing time                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PROC_TIME2                           |
|            BTE Channel 2 descriptor processing time                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PROC_TIME3                           |
|            BTE Channel 3 descriptor processing time                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_TARB_FLT_BLK                         |
|            TARB flits blocked (ready to send, but no flit credits)           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_TARB_PKT_BLK                         |
|            TARB packets blocked (ready to send, but no packet credits)       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PARB_WR_FLT_BLK                      |
|            PARB write flits blocked (ready to send, but no flit credits)     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PARB_RD_FLT_BLK                      |
|            PARB read flits blocked (ready to send, but no flit credits)      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PARB_RD_PKT_BLK                      |
|            PARB read packets blocked (ready to send, but no packet credits)  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_REQ0                              |
|            BTE Channel 0 read request packets set                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_REQ1                              |
|            BTE Channel 1 read request packets set                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_REQ2                              |
|            BTE Channel 2 read request packets set                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_REQ3                              |
|            BTE Channel 3 read request packets set                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_RSP0                              |
|            BTE Channel 0 read response packets received                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_RSP1                              |
|            BTE Channel 1 read response packets received                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_RSP2                              |
|            BTE Channel 2 read response packets received                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_RD_RSP3                              |
|            BTE Channel 3 read response packets received                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PI_RD_RSP_ERR0                       |
|            Channel 0 PI read response errors                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PI_RD_RSP_ERR1                       |
|            Channel 1 PI read response errors                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PI_RD_RSP_ERR2                       |
|            Channel 2 PI read response errors                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_PI_RD_RSP_ERR3                       |
|            Channel 3 PI read response errors                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NAT_ERR0                             |
|            Channel 0 NAT errors                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NAT_ERR1                             |
|            Channel 1 NAT errors                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NAT_ERR2                             |
|            Channel 2 NAT errors                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_NAT_ERR3                             |
|            Channel 3 NAT errors                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_TIMEOUT_ERR0                         |
|            Channel 0 timeout errors                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_TIMEOUT_ERR1                         |
|            Channel 1 timeout errors                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_TIMEOUT_ERR2                         |
|            Channel 2 timeout errors                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_TIMEOUT_ERR3                         |
|            Channel 3 timeout errors                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_UNCORRECTABLE_ERR0                   |
|            Channel 0 uncorrectable errors                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_UNCORRECTABLE_ERR1                   |
|            Channel 1 uncorrectable errors                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_UNCORRECTABLE_ERR2                   |
|            Channel 2 uncorrectable errors                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_UNCORRECTABLE_ERR3                   |
|            Channel 3 uncorrectable errors                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_INV_CMD0                             |
|            Channel 0 Invalid command errors                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_INV_CMD1                             |
|            Channel 1 Invalid command errors                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_INV_CMD2                             |
|            Channel 2 Invalid command errors                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_INV_CMD3                             |
|            Channel 3 Invalid command errors                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_BTE_EVENT_CNTR_AGGREGATED_CQE                       |
|            Aggregated FMAL CQEs                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_PKT                                  |
|            FMA to TARB packets                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_FLIT                                 |
|            FMA to DLA flits                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_TARB_STALLED                         |
|            FMA to DLA stalls                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_PI_PKT                               |
|            Processor interface packets                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_PI_FLIT                              |
|            Processor interface flits                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_CQ                                   |
|            CQ read index updates                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_CQ_STALL                             |
|            CQ read index update stalls                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_GET_REQ                              |
|            Network GET requests                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_FAMO_REQ                             |
|            Fetching AMO requests                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_PUT_REQ                              |
|            Network PUT requests                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_NFAMO_REQ                            |
|            Non-fetching AMO requests                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_HDR_PERR                             |
|            Header flit parity errors                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_DATA_MBE                             |
|            Uncorrectable data flit errors                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_DESC_MBE                             |
|            Uncorrectable descriptor errors                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_INV_CMD                              |
|            Invalid command errors                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_FMA_EVENT_CNTR_TDATA_SBE                            |
|            TARB data buffer SBEs                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_LO_CD_ALLOC_PASS                     |
|            Successful low priority CD allocations                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_LO_CD_ALLOC_FAIL                     |
|            Unsuccessful low priority CD allocations                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_HI_CD_ALLOC_PASS                     |
|            Successful high priority CD allocations                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_HI_CD_ALLOC_FAIL                     |
|            Unsuccessful high priority CD allocations                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_PR_ALLOC_PASS                        |
|            Successful high priority CD allocations                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_PR_ALLOC_FAIL                        |
|            Unsuccessful high priority CD allocations                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_HDR_PERR                             |
|            Header flit parity error                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_DATA_MBE                             |
|            Data flit MBE                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_FIFO_HDR_MBE                         |
|            MBE on packet header removed from FIFO                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_FIFO_ENQ_PKT                         |
|            Packet intended for FIFO                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_LO_CD_ENQ                            |
|            FIFO Enqueued low priority controlled discard packet              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_HI_CD_ENQ                            |
|            FIFO Enqueued high priority controlled discard packet             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_PR_ENQ                               |
|            FIFO Enqueued persistent reservation packet                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_FMA_PKT_ERR                          |
|            AllocSSID, SyncComplete, or DLAMARKER request packet received from|
|             FMA with an lstatus of A_STATUS_FMA_UNCORRECTABLE or A_STATUS_DAT|
|            A_ERR                                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_DLA_EVENT_CNTR_TARB_STALLED                         |
|            DLA to TARB stalls                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ0_PKT                             |
|            Packet sent from normal request queue                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ0_FLIT                            |
|            Flit sent from normal request queue                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ0_STALL                           |
|            Stalling normal request queue                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ0_BLOCK                           |
|            Blocking normal request queue                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ1_PKT                             |
|            Packet sent from AMO-generated request queue (each packet is two f|
|            lits)                                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ1_STALL                           |
|            Stalling AMO-generated request                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_REQ1_BLOCK                           |
|            Blocking AMO-generated request queue                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_RSP0_PKT                             |
|            Packet sent from normal response queue                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_RSP0_FLIT                            |
|            Flit sent from normal response queue                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_RSP0_BLOCK                           |
|            Blocking normal response queue                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_RSP1_PKT                             |
|            Packet sent from AMO-generated response queue                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_RSP1_FLIT                            |
|            Flit sent from AMO-generated response queue                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_RSP1_BLOCK                           |
|            Blocking AMO-generated response queue                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_AMO_DONE                             |
|            AMO requests processed                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_AMO_HIT                              |
|            Hits in AMO cache (AMO requests only)                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_AMO_MISS                             |
|            Misses in AMO cache (AMO requests only, generate fill requests)   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_STALL_MATCH                          |
|            Stalls due to a match in the cache                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_STALL_FLUSH                          |
|            Stalls due to flushing the cache                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_STALL_FULL                           |
|            Stalls due to the cache being full                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_STALL_ORDERED                        |
|            Stalls waiting for the cache to become clean                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_FILL_RSP                             |
|            Fill responses received                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_INVALIDATE                           |
|            Cache invalidations (capacity)                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_REQ_PARITY                       |
|            Parity errors on requests                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_REQ_SBE                          |
|            SBEs in AMO request payload                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_REQ_MBE                          |
|            MBEs in AMO request payload                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_RSP_PARITY                       |
|            Parity errors on responses                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_RSP_SBE                          |
|            SBEs in fill response payload                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_DATASTORE_WR_POISON                  |
|            Datastore was written with poisoned fill data                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_DATASTORE_RD_POISON                  |
|            Datastore was read with poisoned fill data                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_REQLIST_SBE                      |
|            SBEs in request list                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_ERR_REQLIST_MBE                      |
|            MBEs in request list                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_AMO_EVENT_CNTR_TIMEOUT_ARM                          |
|            Cycles spent in this pre-timeout state                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_RAT_GETRESP                           |
|            GetResp or FetchingAMOResp packets received from RAT              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_PARB_PUT                              |
|            Put packets sent to PARB                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_WC_IN                                 |
|            Packets entering the write combining buffers                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_WC_OUT                                |
|            Packets exiting the write combining buffers                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUF0_ALLOCATION                       |
|            Buffer allocations that have been done in write combining buffer b|
|            lock 0                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUF0_COMBINE                          |
|            Times a buffer has combined in write combining buffer block 0     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUF0_EVICTION                         |
|            Evictions that have been done in write combining buffer block 0   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUF1_ALLOCATION                       |
|            Buffer allocations that have been done in write combining buffer b|
|            lock 1                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUF1_COMBINE                          |
|            Times a buffer has combined in write combining buffer block 1     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUF1_EVICTION                         |
|            Evictions that have been done in write combining buffer block 1   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_TAG_PBE                               |
|            TAG PBEs                                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_NTWK_RSP_HDR_PBE                      |
|            Network response header PBEs                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_RSPIN0_HDR_PBE                        |
|            Buffer block 0 Rspin FIFO header PBEs                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_RSPIN1_HDR_PBE                        |
|            Buffer block 1 Rspin FIFO header PBEs                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_REQMON_WC_EVENT_CNTR_BUFFER_TIMEOUT                        |
|            Buffer timeouts                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RSPMON_EVENT_CNTR_TRIGGER0                          |
|            TRIGGER 0 count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RSPMON_EVENT_CNTR_TRIGGER1                          |
|            TRIGGER 1 count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_SSID                                  |
|            SSID requests to CQ                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_BTE                                   |
|            BTE requests to CQ                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DLA                                   |
|            DLA requests to CQ                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_RMT                                   |
|            RMT requests to CQ                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_FMA                                   |
|            FMA read index update requests to CQ                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_SSID_STALLED                          |
|            Clocks when SSID event is stalled due to not enough CAM entries   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_BTE_STALLED                           |
|            Clocks when BTE event is stalled due to not enough CAM entries    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DLA_STALLED                           |
|            Clocks when DLA event is stalled due to not enough CAM entries    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_RMT_STALLED                           |
|            Clocks when RMT event is stalled due to not enough CAM entries    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_SSID_BLOCKED                          |
|            Clocks when SSID event is blocked from leaving the SSID input buff|
|            er                                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_BTE_BLOCKED                           |
|            Clocks when BTE event is blocked from leaving the BTE input buffer|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DLA_BLOCKED                           |
|            Clocks when DLA event is blocked from leaving the DLA input buffer|
|                                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_RMT_BLOCKED                           |
|            Clocks when RMTevent is blocked from leaving the RMT input buffer |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_SSID_DROPPED                          |
|            Dropped SSID completion queue events                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_BTE_DROPPED                           |
|            Dropped BTE completion queue events                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DLA_DROPPED                           |
|            Dropped DLA completion queue events                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_RMT_DROPPED                           |
|            Dropped RMT completion queue events                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_NPT_PKT                               |
|            CQ NPT packets                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_NPT_FLIT                              |
|            CQ NPT flits                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_NPT_STALLED                           |
|            Clocks when NPT packet is stalled due to not enough credits       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_SBE0                         |
|            CQ descriptor table RAM 0 uncorrectable errors                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_SBE1                         |
|            CQ descriptor table RAM 1 uncorrectable errors                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_SBE2                         |
|            CQ descriptor table RAM 2 uncorrectable errors                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_SBE3                         |
|            CQ descriptor table RAM 3 uncorrectable errors                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_MBE0                         |
|            CQ descriptor table RAM 0 correctable errors                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_MBE1                         |
|            CQ descriptor table RAM 1 correctable errors                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_MBE2                         |
|            CQ descriptor table RAM 2 correctable errors                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DESC_TBL_MBE3                         |
|            CQ descriptor table RAM 3 correctable errors                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_RMT_INPUT_RMT_DATA_PARITY_ERR         |
|            RMT input RMT data buffer parity error count                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_RMT_INPUT_EVENT_DATA_PARITY_ERR       |
|            RMT input event data buffer parity error count                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_DLA_INPUT_EVENT_DATA_PARITY_ERR       |
|            DLA input event data buffer parity error count                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_BTE_INPUT_EVENT_DATA_PARITY_ERR       |
|            BTE input event data buffer parity error count                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_SSID_INPUT_EVENT_DATA_PARITY_ERR      |
|            SSID input event data buffer parity error count                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_CQ_EVENT_CNTR_TRANS_CMP_Q_PARITY_ERR                |
|            Translation complete Q parity error count                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_INQ_PARITY                           |
|            Input queue header flit parity error count                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PAYLOAD_SBE                          |
|            Payload flit SBE count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PAYLOAD_MBE                          |
|            Payload flit MBE count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEQ_TBL_SBE                          |
|            Sequence table SBE count                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEQ_TBL_MBE                          |
|            Sequence table MBE count                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_DESC_TBL_SBE                         |
|            Rx descriptor table SBE count                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_DESC_TBL_MBE                         |
|            Rx descriptor table MBE count                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_UNDELIVERABLE_CQE                    |
|            Undeliverable CQE (due to errored or malformed CQWrite or MsgRcvCo|
|            mplete) count                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PUT_CAM_FILLS                        |
|            PUT/MsgSendComplete CAM fill count                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PUT_CAM_MISSES                       |
|            PUT/MsgSendComplete CAM miss count                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PUT_CAM_EVICTS                       |
|            DSMN Sequence CAM evict count                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PUT_CAM_HITS                         |
|            PUT/MsgSendComplete CAM hit count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PUT_MBE_EVICTS                       |
|            DSMN Sequence CAM MBE evict count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_PUT_TIMEOUTS                         |
|            DSMN Sequence CAM MBE timeout count                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_RCV_COMPLETES                        |
|            MsgRcvComplete count                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEND_CAM_FILLS                       |
|            BTE_Send/BTE_SendComplete CAM fill count                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEND_CAM_MISSES                      |
|            BTE_Send/BTE_SendComplete CAM miss count                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEND_CAM_EVICTS                      |
|            BTE_Send Sequence CAM evict count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEND_CAM_HITS                        |
|            BTE_Send/BTE_SendComplete CAM hit count                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEND_MBE_EVICTS                      |
|            BTE_Send Sequence CAM MBE evict count                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_SEND_TIMEOUTS                        |
|            BTE_Send Sequence CAM MBE timeout count                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_RMT_EVENT_CNTR_ABORTS                               |
|            Abort count                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_IDLE                               |
|            IOMMU Idle                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_TR_RCVD                            |
|            Translation requests received                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_TR_1LVL_RSP                        |
|            One level translation requests completed                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_TR_2LVL_RSP                        |
|            Two level translation requests completed                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_IOPF_PTE                           |
|            IO page fault invalid page table entry                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_IOPF_TC                            |
|            IO page fault invalid translation context                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_IOPF_ACCESS                        |
|            IO page fault incorrect access permissions                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_PTEC_HIT                           |
|            Page table entry cache hits                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_PTEC_MISS                          |
|            Page table entry cache misses                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_PTEC_EVICT                         |
|            Page table entry cache                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_PTEC_INVAL                         |
|            Page table entry cache invalidations                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_STALL_PTEC_CA                      |
|            Stalls for page table entry cache can’t allocate an entry (all w|
|            ays pending)                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_OFB_CA                             |
|            Stalls for page table entry cache outstanding fetch buffer allocat|
|            ion                                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_PTE_RF                             |
|            Page table entry re-fetches for PTE not present                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_PTE_INV                            |
|            Page table entry cache entry invalidations                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_IOMMU_EVENT_CNTR_EVENTS                             |
|            Events logged                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_BTE_RD_PKTS                         |
|            BTE read packet count                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_BTE_RD_FLITS                        |
|            BTE read flit count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_BTE_RD_BLOCKED                      |
|            BTE read blocked count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_BTE_WR_PKTS                         |
|            BTE write packet count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_BTE_WR_FLITS                        |
|            BTE write flit count                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_BTE_WR_BLOCKED                      |
|            BTE write blocked count                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_AMO_PKTS                            |
|            AMO packet count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_AMO_FLITS                           |
|            AMO flit count                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_AMO_BLOCKED                         |
|            AMO blocked count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_WC_PKTS                             |
|            WC packet count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_WC_FLITS                            |
|            WC flit count                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_WC_BLOCKED                          |
|            WC blocked count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_IOMMU_PKTS                          |
|            IOMMU packet count                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_IOMMU_FLITS                         |
|            IOMMU flit count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_IOMMU_BLOCKED                       |
|            IOMMU blocked count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_DLA_PKTS                            |
|            DLA packet count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_DLA_FLITS                           |
|            DLA flit count                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_DLA_BLOCKED                         |
|            DLA blocked count                                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_MAINT_PKTS                          |
|            MAINT packet count                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_MAINT_FLITS                         |
|            MAINT flit count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_MAINT_BLOCKED                       |
|            MAINT blocked count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_PI_PKTS                             |
|            PI packet count                                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_PI_FLITS                            |
|            PI flit count                                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_PARB_EVENT_CNTR_PI_STALLED                          |
|            PI stalled count                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_CQ_PKTS                              |
|            CQ input packet count                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_CQ_FLITS                             |
|            CQ input flit count                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_CQ_BLOCKED                           |
|            CQ input blocked count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RMT_PKTS                             |
|            RMT input packet count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RMT_FLITS                            |
|            RMT input flit count                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RMT_BLOCKED                          |
|            RMT input blocked count                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_INPUT_PKTS                           |
|            INPUT (RMT or CQ) packet count                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_INPUT_FLITS                          |
|            INPUT (RMT or CQ) flit count                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_INPUT_STALLED                        |
|            INPUT (RMT or CQ) stalled count                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_NP_PKTS                              |
|            Non-posted response packet count (packets that are not PKT_IGNORE,|
|             PKT_DROP, or PKT_CW)                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_NP_FLITS                             |
|            Non-posted response flit count                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_NP_BLOCKED                           |
|            Non-posted response blocked count                                 |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_P_PKTS                               |
|            Posted response packet count                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_P_BLOCKED                            |
|            Posted response blocked count                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_CE_PKTS                              |
|            CE response packet count                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_CE_BLOCKED                           |
|            CE response blocked count                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_NL_PKTS                              |
|            NL response packet count                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_NL_FLITS                             |
|            NL response flit count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_NL_STALLED                           |
|            NL response stalled count                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RSP_PKT                              |
|            PI response packet count                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RSP_FLIT                             |
|            PI response flit count                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_PKT_IGNORE                           |
|            PI packets not intended for the NPT (including unsolicited and par|
|            ity errors)                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_PKT_DROP                             |
|            PI packets intended for the NPT but dropped (either response suppr|
|            essed or MBE on NPT RAM)                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_PKT_CW                               |
|            PI packets (completion wait flush response)                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_ERR_SBE                              |
|            SBE’s on NPT RAM                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_ERR_MBE                              |
|            MBE’s on NPT RAM                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_REQ_PE                               |
|            Parity error in request header                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RSP_PE                               |
|            Parity error in response header                                   |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RSP_SBE                              |
|            SBE in response payload                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_NIC_RSPMON_NPT_EVENT_CNTR_RSP_MBE                              |
|            MBE in response payload                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PRSP_PKTS                                          |
|            Incremented when the PMI receives a response from the Denali IP   |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PRSP_FLITS                                         |
|            Incremented when the PMI receives a valid flit from the Denali IP |
|            (header or data payload)                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PRSP_BLKD                                          |
|            Incremented when the PMI blocks a valid response flit from the Den|
|            ali IP                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PREQ_PKTS                                          |
|            Incremented when the PMI sends a request to the Denali IP         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PREQ_FLITS                                         |
|            Incremented when the PMI sends a valid flit to the Denali IP (head|
|            er or data payload)                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PREQ_BLKD                                          |
|            Incremented when the PMI is blocked from sending a valid request f|
|            lit to the Denali IP due to the de-assertion of HAL Ready         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PREQ_PTC_BLKD0                                     |
|            Incremented when the PMI is blocked from sending the head request |
|            from PReq buffer 0 due to lack of header or data payload credits a|
|            dvertised by the root complex                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PREQ_PTC_BLKD1                                     |
|            Incremented when the PMI is blocked from sending the head request |
|            from PReq buffer 1 due to lack of header or data payload credits a|
|            dvertised by the root complex                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_PCLK_PREQ_PTC_BLKD2                                     |
|            When PM_SELECT is set, PM is incremented when the PMI is blocked f|
|            rom sending the head request from PReq buffer 2 due to lack of hea|
|            der or data payload credits advertised by the root complex        |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_PCLK_NIF_RX_PKT_CNT                                     |
|            Incremented when a packet received from the HAL is written into th|
|            e NIF asynchronous FIFO                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_PCLK_LIF_RX_PKT_CNT                                     |
|            Incremented when a packet received from the HAL is written into th|
|            e LIF asynchronous FIFO                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_PCLK_TRSP_TX_PKT_CNT                                    |
|            Incremented when a packet is read from the LIF response FIFO and s|
|            ent to the HAL                                                    |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_PCLK_TRSP_OFIFO_SBE_CNT                                 |
|            Incremented when an SBE is detected while reading from the LIF res|
|            ponse FIFO                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_PCLK_MSIX_MSG_CNT                                       |
|            Incremented when an MSI-X message is sent to the HAL              |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_PCLK_MSIX_MSG_STALLED_CNT                               |
|            Incremented each clock cycle that the MSI-X mux has a message to s|
|            end to the HAL but is waiting on an acknowledgment for the previou|
|            s message                                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_PCLK_MSIX_MSG_FIFO_SBE_CNT                              |
|            Incremented when an SBE is detected when reading from one of the M|
|            SI-X controller asynchronous FIFOs                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_GET_PKTS                                           |
|            Incremented when the PMI receives a GET request w/o errors from th|
|            e NIC                                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_PUT_PKTS                                           |
|            Incremented when the PMI receives a PUT request w/o errors from th|
|            e NIC                                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_AMO_PKTS                                           |
|            Incremented when the PMI receives an AMO request w/o errors from t|
|            he NIC                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_OTHER_PKTS                                         |
|            Incremented when the PMI receives a MISC request w/o errors from t|
|            he NIC                                                            |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_NIC_FLITS                                          |
|            Incremented when the PMI receives a valid flit from the NIC (heade|
|            r or data payload)                                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_RR_BLKD                                            |
|            Incremented when PMI blocks a NIC request due to response required|
|             traffic shaping                                                  |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_IRSP_BLKD                                          |
|            Incremented when PMI blocks a NIC request due to IRsp buffer back |
|            pressure                                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_PTC_BLKD0                                          |
|            Incremented when PMI blocks a request due to back pressure from PC|
|            Ie traffic class buffer 0                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_PTC_BLKD1                                          |
|            Incremented when PMI blocks a request due to back pressure from PC|
|            Ie traffic class buffer 1                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_PTC_BLKD2                                          |
|            Incremented when PMI blocks a request due to back pressure from PC|
|            Ie traffic class buffer 2                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_TCG_BLKD0                                          |
|            Incremented when a NIC request in NReq buffer 0 is blocked do to l|
|            ack of TIDs                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_TCG_BLKD1                                          |
|            Incremented when a NIC request in NReq buffer 1 is blocked do to l|
|            ack of TIDs                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NREQ_TCG_BLKD2                                          |
|            Incremented when a NIC request in NReq buffer 2 is blocked do to l|
|            ack of TIDs                                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_IRSP_PKTS                                               |
|            Incremented when PMI issues a response to the NIC from the IRsp bu|
|            ffer                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_IRSP_PKTS_BLKD                                          |
|            Incremented when a response is blocked in the IRsp buffer due to l|
|            ack of NIC response credits                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NRSP_PKTS                                               |
|            Incremented when PMI issues a response to the NIC from the NRsp bu|
|            ffer                                                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NRSP_PKTS_BLKD                                          |
|            Incremented when a response is blocked in the NRsp buffer due to l|
|            ack of NIC response credits                                       |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NRSP_FLITS                                              |
|            Incremented when PMI issues a flit to the NIC from the NRsp buffer|
|             (header or data payload)                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NRSP_HWM                                                |
|            Incremented each clock cycle that the NRsp buffer flit count is gr|
|            eater than the configured NRsp high water                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_NRSP_BP                                                 |
|            Incremented each clock cycle that the NRsp buffer flit count is gr|
|            eater than the configured NRsp flow control (back pressure) thresh|
|            old                                                               |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PMI_REQTRANS_BLKD                                           |
|            Incremented when a NIC request in the ReqTrans block is blocked do|
|             to lack of PCIe TIDs                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_RX_PKT_CNT                                          |
|            Incremented when the NIF receives a packet from the HAL           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_TX_PKT_CNT                                          |
|            Incremented when the NIF sends a packet to the NIC                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_PKT_DISCARD_CNT                                     |
|            Incremented when the NIF discards a packet received from the HAL  |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_IFIFO_MBE_CNT                                       |
|            Incremented when an MBE is detected while reading from the NIF inp|
|            ut FIFO                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_IFIFO_SBE_CNT                                       |
|            Incremented when an SBE is detected while reading from the NIF inp|
|            ut FIFO                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_NIC_STALLED_CNT                                     |
|            Incremented each clock cycle that the NIF has a packet to send to |
|            the NIC but no credits are available                              |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_NIC_DATA_QW_CNT                                     |
|            Full quad words of data sent to the NIC                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_NIF_NIC_DATA_BYTE_CNT                                   |
|            Bytes of data sent to the NIC                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_RX_PKT_CNT                                      |
|            Incremented when the LIF receives a packet from the HAL           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_TX_PKT_CNT                                      |
|            Incremented when the LIF sends a packet to the local block        |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_PKT_DISCARD_CNT                                 |
|            Incremented when the LIF discards a packet received from the HAL  |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_IFIFO_MBE_CNT                                   |
|            Incremented when an MBE is detected while reading from the LIF inp|
|            ut FIFO                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_IFIFO_SBE_CNT                                   |
|            Incremented when an SBE is detected while reading from the LIF inp|
|            ut FIFO                                                           |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_LB_STALLED_CNT                                  |
|            Incremented each clock cycle that the LIF has a packet to send to |
|            the local block but is waiting on an acknowledgment from the previ|
|            ous packet                                                        |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_REQ_ORF_STALLED_CNT                                 |
|            Incremented each clock cycle that the LIF has a packet to send to |
|            the local block but is waiting on a free outstanding request FIFO |
|            entry                                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_RSP_RX_PKT_CNT                                      |
|            Incremented when the LIF receives a packet from the local block   |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_RSP_TX_PKT_CNT                                      |
|            Incremented when the LIF sends a packet to the HAL                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_RSP_TX_ABORT_CNT                                    |
|            Incremented when the LIF sends a completion abort completion to th|
|            e HAL                                                             |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_RSP_TX_UR_CNT                                       |
|            Incremented when the LIF sends an unsupported request completion t|
|            o the HAL                                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PTI_LIF_RSP_HAL_STALLED_CNT                                 |
|            Incremented each clock cycle that the LIF has a packet to send to |
|            the HAL but the OFIFO is full                                     |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F0_MSIX_MSG_CNT                                         |
|            Incremented when a function 0 MSI-X message is written to the FIFO|
|             for delivery to the HAL interface                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F1_MSIX_MSG_CNT                                         |
|            Incremented when a function 1 MSI-X message is written to the FIFO|
|             for delivery to the HAL interface                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F2_MSIX_MSG_CNT                                         |
|            Incremented when a function 2 MSI-X message is written to the FIFO|
|             for delivery to the HAL interface                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F3_MSIX_MSG_CNT                                         |
|            Incremented when a function 3 MSI-X message is written to the FIFO|
|             for delivery to the HAL interface                                |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F0_MSIX_TABLE_MBE_CNT                                   |
|            Incremented when an MBE is detected while accessing the function 0|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F1_MSIX_TABLE_MBE_CNT                                   |
|            Incremented when an MBE is detected while accessing the function 1|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F2_MSIX_TABLE_MBE_CNT                                   |
|            Incremented when an MBE is detected while accessing the function 2|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F3_MSIX_TABLE_MBE_CNT                                   |
|            Incremented when an MBE is detected while accessing the function 3|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F0_MSIX_TABLE_SBE_CNT                                   |
|            Incremented when an SBE is detected while accessing the function 0|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F1_MSIX_TABLE_SBE_CNT                                   |
|            Incremented when an SBE is detected while accessing the function 1|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F2_MSIX_TABLE_SBE_CNT                                   |
|            Incremented when an SBE is detected while accessing the function 2|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_PII_F3_MSIX_TABLE_SBE_CNT                                   |
|            Incremented when an SBE is detected while accessing the function 3|
|             MSI-X table                                                      |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_LM0_LM1_TRIGGER0_CNT                                        |
|            Incremented when Logic Monitor 0 to Logic Monitor 1 Trigger 0 has |
|            occurred.                                                         |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_LM0_LM1_TRIGGER1_CNT                                        |
|            Incremented when Logic Monitor 0 to Logic Monitor 1 Trigger 1 has |
|            occurred                                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_LM1_LM0_TRIGGER0_CNT                                        |
|            Incremented when Logic Monitor 1 to Logic Monitor 0 Trigger 0 has |
|            occurred                                                          |
--------------------------------------------------------------------------------
| cray_npu:::AR_PI_LM1_LM0_TRIGGER1_CNT                                        |
|            Incremented when Logic Monitor 1 to Logic Monitor 0 Trigger 1 has |
|            occurred                                                          |
--------------------------------------------------------------------------------


Available PAPI preset and user defined events plus hardware information.
--------------------------------------------------------------------------------
PAPI Version             : 5.5.0.1
Vendor string and code   : GenuineIntel (1)
Model string and code    : Intel(R) Xeon(R) CPU E5-2690 v3 @ 2.60GHz (63)
CPU Revision             : 2.000000
CPUID Info               : Family: 6  Model: 63  Stepping: 2
CPU Max Megahertz        : 2601
CPU Min Megahertz        : 1200
Hdw Threads per core     : 2
Cores per Socket         : 12
Sockets                  : 1
NUMA Nodes               : 1
CPUs per Node            : 24
Total CPUs               : 24
Running in a VM          : no
Number Hardware Counters : 11
Max Multiplex Counters   : 192
--------------------------------------------------------------------------------

================================================================================
  PAPI Preset Events
================================================================================
    Name        Code    Avail Deriv Description (Note)
PAPI_L1_DCM  0x80000000  Yes   No   Level 1 data cache misses
PAPI_L1_ICM  0x80000001  Yes   No   Level 1 instruction cache misses
PAPI_L2_DCM  0x80000002  Yes   Yes  Level 2 data cache misses
PAPI_L2_ICM  0x80000003  Yes   No   Level 2 instruction cache misses
PAPI_L1_TCM  0x80000006  Yes   Yes  Level 1 cache misses
PAPI_L2_TCM  0x80000007  Yes   No   Level 2 cache misses
PAPI_L3_TCM  0x80000008  Yes   No   Level 3 cache misses
PAPI_CA_SNP  0x80000009  Yes   No   Requests for a snoop
PAPI_CA_SHR  0x8000000a  Yes   No   Requests for exclusive access to shared cache line
PAPI_CA_CLN  0x8000000b  Yes   No   Requests for exclusive access to clean cache line
PAPI_CA_INV  0x8000000c  Yes   No   Requests for cache line invalidation
PAPI_CA_ITV  0x8000000d  Yes   No   Requests for cache line intervention
PAPI_L3_LDM  0x8000000e  Yes   No   Level 3 load misses
PAPI_TLB_DM  0x80000014  Yes   Yes  Data translation lookaside buffer misses
PAPI_TLB_IM  0x80000015  Yes   No   Instruction translation lookaside buffer misses
PAPI_L1_LDM  0x80000017  Yes   No   Level 1 load misses
PAPI_L1_STM  0x80000018  Yes   No   Level 1 store misses
PAPI_L2_LDM  0x80000019  Yes   No   Level 2 load misses
PAPI_L2_STM  0x8000001a  Yes   No   Level 2 store misses
PAPI_PRF_DM  0x8000001c  Yes   No   Data prefetch cache misses
PAPI_MEM_WCY 0x80000024  Yes   No   Cycles Stalled Waiting for memory writes
PAPI_STL_ICY 0x80000025  Yes   No   Cycles with no instruction issue
PAPI_FUL_ICY 0x80000026  Yes   Yes  Cycles with maximum instruction issue
PAPI_STL_CCY 0x80000027  Yes   No   Cycles with no instructions completed
PAPI_FUL_CCY 0x80000028  Yes   No   Cycles with maximum instructions completed
PAPI_BR_UCN  0x8000002a  Yes   Yes  Unconditional branch instructions
PAPI_BR_CN   0x8000002b  Yes   No   Conditional branch instructions
PAPI_BR_TKN  0x8000002c  Yes   Yes  Conditional branch instructions taken
PAPI_BR_NTK  0x8000002d  Yes   No   Conditional branch instructions not taken
PAPI_BR_MSP  0x8000002e  Yes   No   Conditional branch instructions mispredicted
PAPI_BR_PRC  0x8000002f  Yes   Yes  Conditional branch instructions correctly predicted
PAPI_TOT_INS 0x80000032  Yes   No   Instructions completed
PAPI_LD_INS  0x80000035  Yes   No   Load instructions
PAPI_SR_INS  0x80000036  Yes   No   Store instructions
PAPI_BR_INS  0x80000037  Yes   No   Branch instructions
PAPI_RES_STL 0x80000039  Yes   No   Cycles stalled on any resource
PAPI_TOT_CYC 0x8000003b  Yes   No   Total cycles
PAPI_LST_INS 0x8000003c  Yes   Yes  Load/store instructions completed
PAPI_L2_DCA  0x80000041  Yes   No   Level 2 data cache accesses
PAPI_L3_DCA  0x80000042  Yes   Yes  Level 3 data cache accesses
PAPI_L2_DCR  0x80000044  Yes   No   Level 2 data cache reads
PAPI_L3_DCR  0x80000045  Yes   No   Level 3 data cache reads
PAPI_L2_DCW  0x80000047  Yes   No   Level 2 data cache writes
PAPI_L3_DCW  0x80000048  Yes   No   Level 3 data cache writes
PAPI_L2_ICH  0x8000004a  Yes   No   Level 2 instruction cache hits
PAPI_L2_ICA  0x8000004d  Yes   No   Level 2 instruction cache accesses
PAPI_L3_ICA  0x8000004e  Yes   No   Level 3 instruction cache accesses
PAPI_L2_ICR  0x80000050  Yes   No   Level 2 instruction cache reads
PAPI_L3_ICR  0x80000051  Yes   No   Level 3 instruction cache reads
PAPI_L2_TCA  0x80000059  Yes   Yes  Level 2 total cache accesses
PAPI_L3_TCA  0x8000005a  Yes   No   Level 3 total cache accesses
PAPI_L2_TCR  0x8000005c  Yes   Yes  Level 2 total cache reads
PAPI_L3_TCR  0x8000005d  Yes   Yes  Level 3 total cache reads
PAPI_L2_TCW  0x8000005f  Yes   No   Level 2 total cache writes
PAPI_L3_TCW  0x80000060  Yes   No   Level 3 total cache writes
PAPI_REF_CYC 0x8000006b  Yes   No   Reference clock cycles
--------------------------------------------------------------------------------
Of 108 possible events, 56 are available, of which 12 are derived.

avail.c                                     PASSED
